{"version":3,"sources":["webpack:///webpack/bootstrap aa6844e8f2ff973f9dcf","webpack:///./main.js","webpack:///./views/session-view.js","webpack:///./utils/io.js","webpack:///./utils/gps.js","webpack:///./utils/utils.js","webpack:///./utils/dialog.js","webpack:///./model/calibration.js","webpack:///./model/session.js","webpack:///./db.js","webpack:///./model/session-detail.js","webpack:///./server/api.js","webpack:///./core/stroke-detector.js","webpack:///./measures/timer.js","webpack:///./measures/distance.js","webpack:///./measures/speed.js","webpack:///./measures/pace.js","webpack:///./measures/efficiency.js","webpack:///./measures/field.js","webpack:///./measures/measure.js","webpack:///./views/session-summary.js","webpack:///./views/settings-view.js","webpack:///./model/settings.js","webpack:///./views/home-view.js","webpack:///./views/login-view.js","webpack:///./views/sessions-view.js","webpack:///./views/calibration-view.js","webpack:///./core/calibrate.js","webpack:///./views/calibration-help-view.js","webpack:///./views/session-tips-view.js","webpack:///./global.js","webpack:///./server/sync.js","webpack:///./utils/analytics.js","webpack:///./context.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;;;;;;;AC9IA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;;AAIL;AACA;AACA;AACA;;AAEA,uBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;;AAEL;AACA,uBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA,sCAAqC,yCAAyC;AAC9E;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;;AAEA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB,6BAA4B,8GAA8G;AAC1I;;AAEA,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;;AAEjB;AACA,gDAA+C,0BAA0B;AACzE;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qHAAoH;AACpH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,8CAA8C;AACnE,sBAAqB,8CAA8C;AACnE,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACtYA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oCAAmC,aAAa;AAChD;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA,cAAa;;AAEb;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;;AAEA;AACA,6CAA4C,mBAAmB;AAC/D;AACA;;AAEA,UAAS;AACT;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAS;;AAET;AACA;AACA,G;;;;;;AC3DA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,wDAAuD,YAAY;AACnE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;;AAGA,6EAA4E,4DAA4D;;AAExI;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;AAGA,mB;;;;;;ACpIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;ACvGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,qBAAoB,kCAAkC;AACtD;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA,wCAAuC;AACvC,MAAK;;AAEL,uBAAsB,aAAa;AACnC;;AAEA;AACA;AACA,uB;;;;;;ACnEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AClwBAAuB,iBAAiB;;AAExC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;;;AAGb,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;;AAEb,UAAS;AACT;AACA,UAAS;AACT,MAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA,MAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;;AAEL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;;;;ACjbA;;AAEA;;AAEA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,oDAAmD,mCAAmC;;AAEtF;AACA;AACA;AACA,kCAAiC,gBAAgB;;AAEjD,gCAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA,E;;;;;;ACxGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;;AAEA,uC;;;;;;ACtGA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,cAAa;;AAEb;AACA;AACA,MAAK;;AAEL;AACA;;;AAGA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;AACA,UAAS;;AAET,MAAK;;AAEL;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,MAAK;;AAEL;AACA,MAAK;;AAEL;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA,UAAS;;AAET;AACA;AACA,UAAS;;AAET;AACA,MAAK;;;AAGL;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA,UAAS;;AAET;AACA,UAAS;;;AAGT;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA,MAAK;;;AAGL;AACA;AACA,MAAK;;;AAGL;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,G;;;;;;AChQA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,oBAAmB;AACnB;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iDAAgD;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,YAAW,MAAM;AACjB,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,yEAAwE;AACxE,iBAAgB,0BAA0B;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,YAAW,MAAM;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAsC,QAAQ;AAC9C;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;;;AAGA;AACA,sGAAqG;AACrG;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,8BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA,oBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,iBAAiB;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,oCAAmC,QAAQ;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,mBAAmB;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC;AACA;AACA;AACA;;AAEA,yC;;;;;;ACxxBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,uB;;;;;;ACnEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA8B,WAAW;AACzC;;AAEA;AACA,+BAA8B,WAAW;AACzC;;AAEA,6B;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uB;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA,qB;;;;;;AChCA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA,6C;;;;;;ACnBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,8BAA6B;AAC7B;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;;;AAGL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uB;;;;;;AC9MA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB,oBAAoB;AAC7C;AACA,MAAK;AACL,0BAAyB,oBAAoB;AAC7C;AACA,MAAK;AACL,0BAAyB,oBAAoB;AAC7C;AACA,MAAK;AACL,0BAAyB,kBAAkB;AAC3C;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA,2B;;;;;;AC3EA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT,MAAK;AACL;;;AAGA;;;;;;;AC/DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;;AAGA,qC;;;;;;AC1EA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7GA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;;AAEA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA,gDAA+C,sBAAsB;AACrE,MAAK;;AAEL,8BAA6B,aAAa;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL,8BAA6B,aAAa;AAC1C;;;;AAIA;;;;;;;ACxIA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC,oCAAoC;;AAErE;;AAEA;;AAEA;;AAEA;;AAEA,UAAS;;AAET;AACA,UAAS;AACT,MAAK;AACL;;;AAGA,+B;;;;;;ACvCA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAiD,WAAW;AAC5D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oDAAmD;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA,wBAAuB,SAAS;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET,wDAAuD;AACvD,MAAK;AACL;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iCAAgC;;AAEhC;AACA;AACA,MAAK;AACL;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC1RA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAsB,qCAAqC;AAC3D,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,oBAAoB;AACxE;AACA;AACA,cAAa;AACb,UAAS;AACT;;AAEA,MAAK;AACL;;AAEA,2C;;;;;;AC/BA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAuB;AACvB;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,+B;;;;;;AC1GA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;AACA;AACA,oEAAmE,sBAAsB;AACzF;AACA,MAAK;AACL;;AAEA,mD;;;;;;ACvCA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA,2C;;;;;;AC3BA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAqB,eAAe;AACpC,UAAS;AACT;AACA,kBAAiB;AACjB;AACA,sBAAqB,OAAO;AAC5B;AACA,gBAAe;AACf,UAAS;AACT;AACA,kBAAiB,qGAAqG;AACtH,kBAAiB,oIAAoI;AACrJ,kBAAiB,0IAA0I;AAC3J,kBAAiB,0IAA0I;AAC3J,kBAAiB,0IAA0I;AAC3J,kBAAiB,0IAA0I;AAC3J,kBAAiB,0IAA0I;AAC3J,kBAAiB,0IAA0I;AAC3J,kBAAiB,0IAA0I;AAC3J,kBAAiB,4IAA4I;AAC7J,kBAAiB,4IAA4I;AAC7J,kBAAiB,4IAA4I;AAC7J,kBAAiB,4IAA4I;AAC7J,kBAAiB;AACjB;AACA,sBAAqB,OAAO;AAC5B;AACA,gBAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA8B,uBAAuB;AACrD,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA,0BAAyB;;AAEzB,yBAAwB;AACxB,UAAS;AACT,UAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AChIA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;AACL;;;AAGA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA,UAAS;;AAET;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;;;AAGA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA,kCAAiC,OAAO;AACxC;;AAEA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAoC,sDAAsD;;AAE1F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;;AAEA;AACA;;AAEA,sBAAqB;;AAErB;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB,UAAS;AACT,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;;;;;;AC1KA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA,wB;;;;;;AChBA;;AAEA;;;AAGA;;AAEA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA,UAAS;AACT;AACA,qBAAoB,+BAA+B;AACnD;AACA,UAAS;AACT;AACA,qBAAoB,2BAA2B;AAC/C;AACA,UAAS;AACT;AACA,qBAAoB,6BAA6B;AACjD;AACA,UAAS;AACT;AACA,qBAAoB,8BAA8B;AAClD;AACA,UAAS;AACT;AACA,qBAAoB,mCAAmC;AACvD;AACA;AACA,MAAK;AACL;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA,UAAS;AACT;AACA,qBAAoB,+BAA+B;AACnD;AACA,UAAS;AACT;AACA,qBAAoB,2BAA2B;AAC/C;AACA,UAAS;AACT;AACA,qBAAoB,6BAA6B;AACjD;AACA,UAAS;AACT;AACA,qBAAoB,2BAA2B;AAC/C;AACA,UAAS;AACT;AACA,qBAAoB,mCAAmC;AACvD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA,2B","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap aa6844e8f2ff973f9dcf\n **/","'use strict';\n\nvar SessionView = require('./views/session-view.js').SessionView;\nvar SessionSummaryView = require('./views/session-summary.js').SessionSummaryView;\nvar SettingsView = require('./views/settings-view.js').SettingsView;\nvar HomeView = require('./views/home-view.js').HomeView;\nvar LoginView = require('./views/login-view.js').LoginView;\nvar SessionsView = require('./views/sessions-view.js').SessionsView;\nvar CalibrationView = require('./views/calibration-view.js').CalibrationView;\nvar CalibrationHelpView = require('./views/calibration-help-view.js').CalibrationHelpView;\nvar SessionTipsView = require('./views/session-tips-view.js').SessionTipsView;\nvar Api = require('./server/api');\nvar utils = require('./utils/utils.js');\nvar global = require('./global.js');\nvar db = require('./db.js');\nvar sync = require('./server/sync.js');\nvar analytics = require('./utils/analytics.js');\nvar Settings = require('./model/settings');\nvar Context = require('./context').Context;\n\nvar settings = undefined;\nvar context = undefined;\n\n\n/**\n * Splash screen / login page.\n */\nApp.controller('login', function (page) {\n    analytics.setView('login');\n    screen.lockOrientation('portrait');\n    new LoginView(page);\n});\n\nApp.controller('home', function (page, request) {\n    analytics.setView('home');\n    analytics.setUser(Api.User.getId());\n    screen.lockOrientation('landscape-secondary');\n    Settings.loadSettings().then(function (s) {\n        settings = s;\n        context = new Context(settings);\n        new HomeView(page, context, request);\n    }).fail(function (error, defaultSettings) {\n            settings = defaultSettings;\n            context = new Context(settings);\n        });\n});\n\n/**\n * New session page.\n */\nApp.controller('session', function (page) {\n    analytics.setView('session');\n    new SessionView(page, context);\n});\n\nApp.controller('session-summary', function (page, session) {\n    analytics.setView('session-summary');\n    new SessionSummaryView(page, context, session);\n});\n\n/**\n * Settings page.\n */\nApp.controller('settings', function (page) {\n    analytics.setView('settings');\n    new SettingsView(page, settings);\n});\n\n/**\n * Session list page.\n */\nApp.controller('sessions', function (page) {\n    analytics.setView('sessions');\n    new SessionsView(page, context);\n});\n\n/**\n * Calibration page.\n */\nApp.controller('calibration', function (page, request) {\n    analytics.setView('calibration');\n    new CalibrationView(page, context, request);\n});\n\n/**\n * Pause and swipe session tutorial page.\n */\nApp.controller('session-basic-touch-tutorial', function (page) {\n    analytics.setView('session-touch-tips-tutorial');\n    new SessionTipsView(page, context);\n});\n\n/**\n * Calibration tutorial\n */\nApp.controller('calibration-help', function (page, request) {\n    analytics.setView('calibration-help');\n    new CalibrationHelpView(page, context, request);\n});\n\nfunction onDeviceReady() {\n    document.pd_device_ready = true;\n\n    utils.mapBrowserToNative();\n\n    loadDb();\n\n    setTimeout(function () {\n        loadUi();\n    }, 2000);\n}\n\nif (navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|IEMobile)/)) {\n    document.addEventListener(\"deviceready\", onDeviceReady, false);\n} else {\n    // in browser, development mode!\n    global.emulateCordova();\n    loadDb();\n    Api.User.set({\n        _id: -1,\n        profile: {\n            name: 'local-test-user'\n        }\n    });\n    // go direct to home, without going through authentication\n    App.load('home');\n}\n\nfunction loadDb() {\n    db.init();\n    sync.start();\n}\n\nfunction loadUi() {\n\n    analytics.init();\n\n    Api.Auth.login().done(function () {\n        App.load('home');\n    }).fail(function () {\n        App.load('login');\n    });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./main.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar IO = require('../utils/io.js').IO;\nvar GPS = require('../utils/gps').GPS;\nvar Dialog = require('../utils/dialog');\nvar utils = require('../utils/utils');\nvar Calibration = require('../model/calibration').Calibration;\nvar Session = require('../model/session').Session;\nvar SessionDetail = require('../model/session-detail').SessionDetail;\nvar db = require('../db').Session;\nvar Api = require('../server/api');\nvar StrokeDetector = require('../core/stroke-detector').StrokeDetector;\nvar Timer = require('../measures/timer').Timer;\nvar Distance = require('../measures/distance').Distance;\nvar Speed = require('../measures/speed').Speed;\nvar Pace = require('../measures/pace').Pace;\n\nvar StrokeEfficiency = require('../measures/efficiency').StrokeEfficiency;\n\nvar Field = require('../measures/field.js').Field;\n\nvar DEFAULT_POSITIONS = {\n    top: 'timer',\n    middle: 'speed',\n    bottom: 'distance',\n    large: 'spm'\n};\n\nvar SMALL = 'small', LARGE = 'large';\n\nfunction SessionView(page, context) {\n    var self = this;\n    self.isDebugEnabled = !!Api.User.getProfile().debug;\n\n    var $page = $(page);\n    var calibration = Calibration.load() || Calibration.blank();\n    var session = self.createSession(calibration);\n    var gps = new GPS();\n    var distance = new Distance();\n    var speed = new Speed();\n    var pace = new Pace(context.preferences().isImperial());\n    var strokeEfficiency = new StrokeEfficiency();\n    var strokeDetector = new StrokeDetector(session, calibration, null, self.debug(session));\n    var paused = false;\n\n\n    document.PREVENT_SYNC = true;\n\n    var fields;\n    if (context.preferences().isRestoreLayout()) {\n        fields = loadLayout();\n    } else {\n        fields = DEFAULT_POSITIONS;\n    }\n\n    var top = new Field($('.session-small-measure.yellow', page), fields.top, SMALL, context);\n    var middle = new Field($('.session-small-measure.blue', page), fields.middle, SMALL, context);\n    var bottom = new Field($('.session-small-measure.red', page), fields.bottom, SMALL, context);\n    var large = new Field($('.session-left', page), fields.large, LARGE, context);\n\n\n    // prevent drag using touch during session\n    var preventDrag = function (e) {\n        e.preventDefault();\n    };\n    document.addEventListener('touchmove', preventDrag, false);\n\n    $(window).on('scroll.scrolldisabler', function (event) {\n        $(window).scrollTop(0);\n        event.preventDefault();\n    });\n\n\n    $(window).on('touchmove', function (e) {\n        e.preventDefault();\n    });\n\n\n    // -- initiate timer\n    var timer = new Timer();\n    timer.start(function (value) {\n        if (paused) return;\n        top.setValue(\"timer\", value);\n        middle.setValue(\"timer\", value);\n        bottom.setValue(\"timer\", value);\n        large.setValue(\"timer\", value);\n    });\n\n\n\n    // -- Handle GPS sensor data\n    var lastEfficiency = 0, lastInterval = 0, lastDisplayedSpeed = 0, lastGpsAt = 0;\n    gps.listen(function (position) {\n        if (paused) return;\n\n        var values = {speed: 0, pace: 0, efficiency: 0, distance:0};\n\n        values.distance = distance.calculate(position);\n        values.speed = lastDisplayedSpeed = speed.calculate(position, values.distance);\n        values.efficiency = lastEfficiency = strokeEfficiency.calculate(values.speed, lastInterval);\n        values.pace = pace.calculate(values.speed);\n\n        top.setValues(values);\n        middle.setValues(values);\n        bottom.setValues(values);\n        large.setValues(values);\n\n        lastGpsAt = position.timestamp;\n\n    });\n\n    var resetGpsData = function () {\n        var values = {speed: 0, pace: 0, efficiency: 0};\n        speed.reset();\n\n        top.setValues(values);\n        middle.setValues(values);\n        bottom.setValues(values);\n        large.setValues(values);\n    };\n\n    // -- handle stroke related data\n    var now;\n    strokeDetector.onStrokeRateChanged(function (spm, interval) {\n        if (paused) return;\n\n        // update fields using spm and efficiency\n        top.setValue('spm', spm);\n        middle.setValue('spm', spm);\n        bottom.setValue('spm', spm);\n        large.setValue('spm', spm);\n\n        // store data\n        now  = new Date().getTime();\n        new SessionDetail(session.getId(), now, distance.getValue(), lastDisplayedSpeed, spm\n            , lastEfficiency, distance.getLatitude(), distance.getLongitude()\n        ).save();\n\n        lastInterval = interval;\n\n        // this should not be here, but its the easiest way considering that stroke rate is updated every 1.5 sec\n        if (now - lastGpsAt > 5000) {\n            resetGpsData();\n        }\n    });\n    strokeDetector.start();\n\n    var back = function () {\n        if (context.preferences().isRestoreLayout()) {\n            saveLayout(top.getType(), middle.getType(), bottom.getType(), large.getType());\n        } else {\n            resetLayout();\n        }\n\n        document.removeEventListener('touchmove', preventDrag, false);\n\n        App.load('session-summary', { session: session, isPastSession: false }, undefined, function () {\n            App.removeFromStack();\n        });\n    };\n\n    var tx = false;\n    var clear = function () {\n        tx = true;\n        document.PREVENT_SYNC = false;\n\n        clearInterval(self.intervalId);\n        clearInterval(self.speedIntervalId);\n        timer.stop();\n        gps.stop();\n        strokeDetector.stop();\n\n        // clean buffer\n        if (self.isDebugEnabled)\n            self.flushDebugBuffer();\n\n        session.finish().then(function () {\n            Dialog.hideModal();\n            back();\n        });\n    };\n\n    var confirmBeforeExit = function () {\n        if (tx) {\n            tx = false;\n            return true;\n        }\n\n        timer.pause();\n\n        paused = true;\n\n        self.confirm(function resume() {\n            paused = false;\n            timer.resume();\n            Dialog.hideModal();\n        }, function finish() {\n            clear();\n        });\n    };\n\n    $page.on('appBeforeBack', function (e) {\n        return confirmBeforeExit() === true;\n    });\n\n\n    var $pause, tapStarted = false, pauseCanceled = false, pauseTimeout, lastEvent, pauseAnimationStarted;\n    $page.on('tapstart', function (e) {\n        if (!e.originalEvent.touches) return;\n\n        lastEvent = e;\n        tapStarted = true;\n        pauseCanceled = false;\n        pauseAnimationStarted = false;\n        pauseTimeout = setTimeout(function (event) {\n            return function () {\n                if (pauseCanceled === true || event !== lastEvent) {\n                    pauseCanceled = false;\n                    tapStarted = false;\n                    pauseAnimationStarted = false;\n                    return;\n                }\n\n                var width = $page.width() * .4;\n\n                if (!$pause) $pause = $('#session-stop');\n\n                var svgPath = document.getElementById('pause-svg');\n                var path = new ProgressBar.Path(svgPath, {\n                    duration: 1000,\n                    easing: 'easeIn'\n                });\n\n                $pause.css({top: e.originalEvent.touches[0].clientY - (width / 2), left: e.originalEvent.touches[0].clientX - (width / 2)});\n                $pause.show();\n\n                $('body').css({overflow: 'hidden'});\n                pauseAnimationStarted = true;\n                path.animate(1, function () {\n                    Dialog.hideModal();\n                    if (pauseCanceled === true || event !== lastEvent) {\n                        return;\n                    }\n\n                    setTimeout(function () {\n                        $pause.hide();\n                        confirmBeforeExit();\n                    }, 20);\n                });\n\n                // try to prevent touch move on android, by placing a fixed backdrop on top of the animation\n                Dialog.showModal($('<div/>'), {color: ' rgba(0,0,0,0.1)'});\n            }\n        }(lastEvent), 450);\n    });\n\n    $page.on('tapend', function () {\n        if ($pause !== undefined)\n            $pause.hide();\n\n        if (tapStarted)\n            pauseCanceled = true;\n\n        clearTimeout(pauseTimeout);\n    });\n\n    $page.on('measureSwapStarted', function () {\n        // if already showing pause animation, let it do it\n        if (pauseAnimationStarted)\n            return;\n\n        // not showing pause, but tap started? Discard... user is changing measures\n        if (tapStarted)\n            pauseCanceled = true;\n\n        clearTimeout(pauseTimeout);\n    });\n}\n\nSessionView.prototype.debug = function (session) {\n    var self = this;\n    self.sensorData = [];\n\n    if (self.isDebugEnabled !== true)\n        return function () {};\n\n\n    // Open debug file\n    IO.open(session.getDebugFile()).then(function (file) {\n        self.sensorDataFile = file;\n    }).fail(function () {\n            self.sensorDataFileError = true;\n        });\n\n    self.sensorDataFileError = false;\n    return function onAccelerationTriggered(acceleration, value) {\n\n        if (self.sensorDataFileError == true) {\n            self.sensorData = [];\n            return;\n        }\n\n        if (self.sensorData.length >= 100) {\n            IO.write(self.sensorDataFile, self.sensorData.join('\\n') + '\\n');\n            self.sensorData = [];\n            return;\n        }\n\n        self.sensorData.push([acceleration.timestamp, acceleration.x, acceleration.y, acceleration.z, value].join(';'));\n    };\n};\n\nSessionView.prototype.flushDebugBuffer = function () {\n    var self = this;\n    if (self.isDebugEnabled !== true)\n        return;\n\n    IO.write(self.sensorDataFile, self.sensorData.join('\\n'));\n};\n\nSessionView.prototype.createSession = function (calibration) {\n    var session = new Session(new Date().getTime() // TODO: handle timezone!!!\n        , calibration.getAngleZ()\n        , calibration.getNoiseX()\n        , calibration.getNoiseZ()\n        , calibration.getFactorX()\n        , calibration.getFactorZ()\n        , calibration.getPredominant()\n    );\n\n    return session.create();\n};\n\nSessionView.prototype.confirm = function (onresume, onfinish) {\n    var self = this;\n    var $controls = $('<div class=\"session-controls\"/>');\n    var $resume = $('<div class=\"session-resume\">' +\n        '<div class=\"session-controls-outer-text\">' +\n        '<div class=\"session-controls-inner-text vw_font-size3\">resume</div>' +\n        '</div></div></div>');\n    var $finish = $('<div class=\"session-finish\"><div class=\"session-controls-outer-text\">' +\n        '<div class=\"session-controls-inner-text vw_font-size3\">finish</div>' +\n        '</div></div></div>');\n\n    $controls.append($finish).append($resume);\n    Dialog.showModal($controls, {});\n\n    // make height equal to width and adjust margin accordingly\n    var displayHeight = $controls.height();\n    setTimeout(function () {\n        var height = $resume.width();\n        var margin = (displayHeight - height) / 2;\n        $resume.height(height);\n        $finish.height(height);\n        $resume.css({\"margin-top\": margin, \"margin-bottom\": margin});\n        $finish.css({\"margin-top\": margin, \"margin-bottom\": margin});\n    }, 0);\n\n    // add behavior\n    $resume.on('touchend', function () {\n        onresume.apply(self, []);\n    });\n\n    $finish.on('touchend', function () {\n        onfinish.apply(self, []);\n    });\n}\n\n\nfunction saveLayout(top, middle, bottom, large) {\n    window.localStorage.setItem(\"layout\", JSON.stringify({\n        top: top,\n        middle: middle,\n        bottom: bottom,\n        large: large\n    }));\n}\n\nfunction loadLayout() {\n    var layout = window.localStorage.getItem(\"layout\");\n    if (layout)\n        return JSON.parse(layout);\n    else\n        return DEFAULT_POSITIONS;\n}\n\nfunction resetLayout() {\n    window.localStorage.removeItem(\"layout\");\n}\n\nexports.SessionView = SessionView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/session-view.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nexports.IO = {\n    open: function(filename) {\n        var self = this, defer = $.Deferred();\n\n        if (!filename) {\n            defer.reject();\n            return defer.promise();\n        }\n\n        console.log('open ', filename);\n\n        var success = function (dir) {\n            dir.getFile(filename, {create: true}, function (file) {\n                defer.resolve(file)\n            });\n        };\n\n        if (window.resolveLocalFileSystemURL)\n            window.resolveLocalFileSystemURL(cordova.file.cacheDirectory, success, function fail(e) {\n                defer.reject(e);\n            });\n\n        return defer.promise();\n    },\n\n    write: function (file, content) {\n        if(!file) return;\n\n        file.createWriter(function (fileWriter) {\n\n            console.log('writting to', fileWriter);\n\n            fileWriter.seek(fileWriter.length);\n            var blob = new Blob([content], {type: 'text/plain'});\n            fileWriter.write(blob);\n            console.log('finished');\n\n        }, function fail() {\n            console.log(\"write to log failed\");\n        });\n    },\n\n    read: function(file) {\n        var defer = $.Deferred();\n        file.file(function(file) {\n            var reader = new FileReader();\n\n            reader.onloadend = function(e) {\n                console.log(\"reading from: \", this);\n                defer.resolve(this.result);\n            }\n\n            reader.readAsText(file);\n        });\n\n        return defer.promise();\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./utils/io.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar utils = require('./utils.js');\nvar Dialog = require('./dialog.js');\n\n\nfunction GPS () {\n    var self = this;\n    self.listeners = [];\n    self.watchId = undefined;\n    self.currentPosition = undefined;\n    self.counter = 0;\n}\n\nGPS.prototype.listen = function(callback) {\n    var self = this;\n    self.listeners.push(callback);\n    if (!self.started)\n        self.start();\n};\n\nGPS.prototype.start = function() {\n    var self = this;\n\n    var onSuccess = function (position) {\n        \n        // first readings are always less accurate - discard them!\n        if (self.counter < 5) {\n            self.counter++;\n            return;\n        }\n        \n        if (position.coords.accuracy > 10) return;\n\n        // make sure that the reading has the necessary precision\n        if (!self.isAcceptablePosition(position, self.currentPosition))\n            return;\n\n        for (var i = 0, length = self.listeners.length; i < length; i++) {\n            self.listeners[i].apply(undefined, [position]);\n        }\n\n        self.currentPosition = position;\n    };\n\n    var onError = function (error) {\n        console.log(error);\n        var message, title;\n        if (device.platform === 'iOS') {\n            title = 'Location is disabled';\n            message = 'Please enable Location Services in <i>Settings > Privacy > Location Services</i> and in <i>Settings > Paddler</i>';\n        } else if (device.platform === 'Android') {\n            title = 'Unable to Acquire GPS Signal';\n            message = 'Please make sure GPS is enabled in <i>Settings > Location</i>';\n        }\n        setTimeout(function () {\n            Dialog.alert(title, message, 'OK', undefined);\n        }, 2000);\n    };\n\n\n    self.watchId = navigator.geolocation.watchPosition(onSuccess, onError, { timeout: 60000, enableHighAccuracy: true, maximumAge: 500 });\n\n    self.started = true;\n};\n\nGPS.prototype.stop = function() {\n    var self = this;\n    navigator.geolocation.clearWatch(self.watchId);\n};\n\n\nGPS.prototype.isAcceptablePosition = function (position, currentPosition) {\n    var self = this;\n    if (currentPosition === undefined) {\n        // A new location is always better than no location\n        return true;\n    }\n\n    // Check whether the new location fix is newer or older\n    var timeDelta = position.timestamp - currentPosition.timestamp;\n    var isSignificantlyNewer = timeDelta > 5000;\n    var isSignificantlyOlder = timeDelta < -5000;\n    var isNewer = timeDelta > 0;\n\n    // If it's been more than two minutes since the current location, use the new location\n    // because the user has likely moved\n    if (isSignificantlyNewer) {\n        return true;\n        // If the new location is more than two minutes older, it must be worse\n    } else if (isSignificantlyOlder) {\n        return false;\n    }\n\n    // Check whether the new location fix is more or less accurate\n    var accuracyDelta = position.coords.accuracy - currentPosition.accuracy;\n    var isMoreAccurate = accuracyDelta < 0;\n    var isSignificantlyLessAccurate = accuracyDelta > 10;\n\n    // Determine location quality using a combination of timeliness and accuracy\n    if (isMoreAccurate) {\n        return true;\n    } else if (isNewer && !isSignificantlyLessAccurate ) {\n        return true;\n    }\n    return false;\n};\n\n\nGPS.calcDistance = function (starting, ending) {\n    var KM_RATIO = 6371;\n    try {\n        var dLat = utils.toRadians(ending.coords.latitude - starting.coords.latitude);\n        var dLon = utils.toRadians(ending.coords.longitude - starting.coords.longitude);\n        var lat1Rad = utils.toRadians(starting.coords.latitude);\n        var lat2Rad = utils.toRadians(ending.coords.latitude);\n\n        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n            Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1Rad) * Math.cos(lat2Rad);\n        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        var d = KM_RATIO * c;\n\n        if (isNaN(d))\n            return 0;\n        else\n            return KM_RATIO * c;\n    } catch (e) {\n        return 0;\n    }\n};\n\n\nexports.GPS = GPS;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./utils/gps.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nfunction lpad(value, places) {\n    var pad = new Array(places + 1).join('0');\n    var str = value + \"\";\n    return pad.substring(0, pad.length - str.length) + str;\n}\nfunction round(value, decimalPlaces) {\n    if (decimalPlaces === 0) return Math.round(value);\n\n    var precision = Math.pow(10, decimalPlaces);\n    return Math.round(value * precision) / precision;\n}\n\nfunction round2(value) {\n    return Math.round(value * 100) / 100;\n}\n\nfunction round1(value) {\n    return Math.round(value * 10) / 10;\n}\n\nfunction toRadians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\nfunction isNetworkConnected() {\n\n    return navigator.connection.type === Connection.ETHERNET ||\n        navigator.connection.type === Connection.WIFI ||\n        navigator.connection.type === Connection.CELL_2G ||\n        navigator.connection.type === Connection.CELL_3G ||\n        navigator.connection.type === Connection.CELL_4G ||\n        navigator.connection.type === Connection.CELL;\n}\n\nfunction onWifi() {\n    return navigator.connection.type === Connection.ETHERNET || navigator.connection.type === Connection.WIFI;\n}\n\nfunction avg(arr) {\n    if (arr.length === 0) return 0;\n    var value = 0;\n    for (var i = 0; i < arr.length; i++) {\n        value += arr[i];\n    }\n    return value / arr.length;\n}\n\nfunction kmToMiles(kms) {\n    return kms * 0.621371;\n}\n\nfunction meterToFeet(meters) {\n    return meters * 3.28084;\n}\n\n/**\n * Convert actions from browser actions into native ones (by registering plugins)\n */\nfunction mapBrowserToNative() {\n\n    // Override default HTML alert with native dialog\n    if (navigator.notification) {\n        window.alert = function (message) {\n            navigator.notification.alert(\n                message,    // message\n                null,       // callback\n                \"Paddler\",  // title\n                'OK'        // buttonName\n            );\n        };\n\n        window.confirm = function (message, callback) {\n            return navigator.notification.confirm(message, callback, \"Paddler\", null)\n        }\n    }\n\n    document.addEventListener(\"backbutton\", function (e) {\n        try {\n            App.back();\n        } catch (te) {\n            console.log(te);\n        }\n    }, false);\n\n    window.powermanagement.acquire();\n\n    StatusBar.overlaysWebView( false );\n    StatusBar.backgroundColorByHexString('#ffffff');\n    StatusBar.styleDefault();\n}\n\nexports.mapBrowserToNative = mapBrowserToNative;\nexports.lpad = lpad;\nexports.round2 = round2;\nexports.round1 = round1;\nexports.round = round;\nexports.toRadians = toRadians;\nexports.isNetworkConnected = isNetworkConnected;\nexports.onWifi = onWifi;\nexports.avg = avg;\nexports.kmToMiles = kmToMiles;\nexports.meterToFeet = meterToFeet;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./utils/utils.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nvar $modal = undefined;\n\n/**\n *\n *\n * @param $content\n * @param options\n */\nfunction showModal($content, options) {\n    if ($modal) {\n        $modal.remove()\n    }\n    $modal = $('<div id=\"modal\" class=\"dialog-overlay\"></div>');\n\n    options = options || {};\n\n    // override background color\n    if (options.color) {\n        $modal.css({\"background-color\": options.color});\n    }\n    $modal.append($content);\n\n    // check if we want to center content in page\n    if (options.center === true) {\n        setTimeout(function () {\n            $content.center();\n        }, 0);\n    }\n    $modal.appendTo($('body'));\n}\n\nfunction hideModal() {\n    $modal.remove();\n    $modal = undefined;\n}\n\n\nfunction alert(title, body, btn, callback) {\n    var html = [\n        '<div class=\"info-modal-body\">',\n        '<div class=\"info-modal-title vh_height10 vh_line-height10\">',  title , '</div>',\n        '<div class=\"info-modal-content vh_height26\">',\n        body,\n        '</div>',\n        '<div class=\"info-modal-controls vh_height15 vh_line-height15\">',\n        '<div class=\"info-modal-primary-action\">', btn, '</div>',\n        '</div>',\n        '</div>'\n    ];\n\n    var $body = $(html.join(''))\n        , $calibrate = $body.find('.info-modal-primary-action');\n\n\n\n    $calibrate.on('tap', function () {\n        hideModal();\n        if (callback) callback.apply({}, []);\n    });\n\n    showModal($body, {center: true});\n}\n\nexports.showModal = showModal;\nexports.hideModal = hideModal;\nexports.alert = alert;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./utils/dialog.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nfunction Calibration(predominant, angleZ, noiseX, noiseY, noiseZ, factorX, factorZ) {\n    var self = this;\n    self.predominant = predominant;\n    self.angleZ = angleZ;\n    self.noiseX = noiseX;\n    self.noiseY = noiseY;\n    self.noiseZ = noiseZ;\n    self.factorX = factorX;\n    self.factorZ = factorZ;\n}\n\nCalibration.prototype.getPredominant = function () {\n    return this.predominant;\n}\n\nCalibration.prototype.setPredominant = function (predominant) {\n    this.predominant = predominant;\n}\n\nCalibration.prototype.getAngleZ = function () {\n    return this.angleZ;\n}\n\nCalibration.prototype.setAngleZ = function (angleZ) {\n    this.angleZ = angleZ;\n}\n\nCalibration.prototype.getNoiseX = function () {\n    return this.noiseX;\n}\n\nCalibration.prototype.setNoiseX = function (noiseX) {\n    this.noiseX = noiseX;\n}\n\nCalibration.prototype.getNoiseY = function () {\n    return this.noiseY;\n}\n\nCalibration.prototype.setNoiseY = function (noiseY) {\n    this.noiseY = noiseY;\n}\n\nCalibration.prototype.getNoiseZ = function () {\n    return this.noiseZ;\n}\n\nCalibration.prototype.setNoiseZ = function (noiseZ) {\n    this.noiseZ = noiseZ;\n}\n\nCalibration.prototype.setActive = function (active) {\n    this.active = active;\n}\n\nCalibration.prototype.getFactorX = function () {\n    return this.factorX;\n}\n\nCalibration.prototype.setFactorX = function (factorX) {\n    this.factorX = factorX;\n}\n\nCalibration.prototype.getFactorZ = function () {\n    return this.factorZ;\n}\n\nCalibration.prototype.setFactorX = function (factorZ) {\n    this.factorZ = factorZ;\n}\n\nCalibration.prototype.save = function () {\n    window.localStorage.setItem(\"calibration\", JSON.stringify({\n        predominant: this.predominant,\n        angleZ: this.angleZ,\n        noiseX: this.noiseX,\n        noiseY: this.noiseY,\n        noiseZ: this.noiseZ,\n        factorX: this.factorX,\n        factorZ: this.factorZ\n    }));\n};\n\n\nCalibration.load = function () {\n    var obj = JSON.parse(window.localStorage.getItem(\"calibration\"));\n    if (!obj) {\n        return undefined;\n    }\n    return new Calibration(obj.predominant, obj.angleZ, obj.noiseX, obj.noiseY, obj.noiseZ, obj.factorX, obj.factorZ);\n}\n\nCalibration.blank = function () {\n    return new Calibration(0, 0, 0, 0, 0, 0, 0);\n}\n\nexports.Calibration = Calibration;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./model/calibration.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar db = require('../db.js');\nvar SessionDetail = require('./session-detail').SessionDetail;\nvar utils = require('../utils/utils.js');\n\nfunction Session(sessionStart, angleZ, noiseX, noiseZ, factorX, factorZ, axis, distance, avgSpm, topSpm, avgSpeed, topSpeed, sessionEnd) {\n    this.connection = db.getConnection();\n    this.id = null;\n    this.remoteId = null;\n    this.sessionStart = sessionStart;\n    this.sessionEnd = sessionEnd;\n    this.angleZ = angleZ;\n    this.noiseX = noiseX;\n    this.noiseZ = noiseZ;\n    this.factorX = factorX;\n    this.factorZ = factorZ;\n    this.axis = axis;\n    this.debugFile = this.sessionStart + \".csv\";\n    this.distance = distance;\n    this.avgSpm = avgSpm;\n    this.topSpm = topSpm;\n    this.avgSpeed = avgSpeed;\n    this.topSpeed = topSpeed;\n    this.topEfficiency = undefined;\n    this.avgEfficiency = undefined;\n\n    this.dbgAttempt = undefined;\n    this.dbgSyncedRows = 0;\n    return this;\n}\n\nSession.prototype.setId = function (id) {\n    this.id = id;\n};\nSession.prototype.getId = function () {\n    return this.id;\n};\n\nSession.prototype.setRemoteId = function (id) {\n    this.remoteId = id;\n};\nSession.prototype.getRemoteId = function () {\n    return this.remoteId;\n};\n\nSession.prototype.setSessionStart = function (sessionStart) {\n    this.sessionStart = sessionStart;\n};\nSession.prototype.getSessionStart = function () {\n    return this.sessionStart;\n};\n\nSession.prototype.setSessionEnd = function (sessionEnd) {\n    this.sessionEnd = sessionEnd;\n};\nSession.prototype.getSessionEnd = function () {\n    return this.sessionEnd;\n};\nSession.prototype.setAngleZ = function (angleZ) {\n    this.angleZ = angleZ;\n};\nSession.prototype.getAngleZ = function () {\n    return this.angleZ;\n};\nSession.prototype.setNoiseX = function (noiseX) {\n    this.noiseX = noiseX;\n};\nSession.prototype.getNoiseX = function () {\n    return this.noiseX;\n};\nSession.prototype.setNoiseZ = function (noiseZ) {\n    this.noiseZ = noiseZ;\n};\nSession.prototype.getNoiseZ = function () {\n    return this.noiseZ;\n};\nSession.prototype.setFactorX = function (factorX) {\n    this.factorX = factorX;\n};\nSession.prototype.getFactorX = function () {\n    return this.factorX;\n};\nSession.prototype.setFactorZ = function (factorZ) {\n    this.factorZ = factorZ;\n};\nSession.prototype.getFactorZ = function () {\n    return this.factorZ;\n};\nSession.prototype.setAxis = function (axis) {\n    this.axis = axis;\n};\nSession.prototype.getAxis = function () {\n    return this.axis;\n};\nSession.prototype.setDebugFile = function (debug) {\n    this.debugFile = debug;\n};\nSession.prototype.getDebugFile = function () {\n    return this.debugFile;\n};\n\nSession.prototype.setAvgSpm = function (avgSpm) {\n    this.avgSpm = avgSpm;\n};\nSession.prototype.getAvgSpm = function () {\n    return this.avgSpm;\n};\nSession.prototype.setTopSpm = function (topSpm) {\n    this.topSpm = topSpm;\n};\nSession.prototype.getTopSpm = function () {\n    return this.topSpm;\n};\nSession.prototype.setAvgSpeed = function (avgSpeed) {\n    this.avgSpeed = avgSpeed;\n};\nSession.prototype.getAvgSpeed = function () {\n    return this.avgSpeed;\n};\nSession.prototype.setTopSpeed = function (topSpeed) {\n    this.topSpeed = topSpeed;\n};\nSession.prototype.getTopSpeed = function () {\n    return this.topSpeed;\n};\n\nSession.prototype.setTopEfficiency = function(value) {\n    this.topEfficiency = value;\n};\n\n// TODO: create efficiency fields in table\nSession.prototype.getTopEfficiency = function(){\n    return this.topEfficiency;\n};\n\nSession.prototype.setAvgEfficiency = function(value) {\n    this.avgEfficiency = value;\n};\n\nSession.prototype.getAvgEfficiency = function(){\n    return this.avgEfficiency;\n};\n\nSession.prototype.setDistance = function (distance) {\n    this.distance = distance;\n};\nSession.prototype.getDistance = function () {\n    return this.distance;\n};\n\nSession.prototype.setDebugAttempt = function (attempt) {\n    this.dbgAttempt = attempt;\n};\nSession.prototype.getDebugAttempt = function () {\n    return this.dbgAttempt;\n};\nSession.prototype.isSynced = function () {\n    return !!(this.remoteId);\n};\n\nSession.prototype.setDbgSyncedRows = function (rows) {\n    this.dbgSyncedRows = rows;\n};\n\nSession.prototype.getDbgSyncedRows = function () {\n    return this.dbgSyncedRows;\n};\n\nSession.prototype.createAPISession = function () {\n\n    var self = this,\n        defer = $.Deferred();\n\n    SessionDetail.get(self.getId(), function (rows) {\n\n        var dataPoints = [],\n            row;\n\n        for (var j = 0; j < rows.length; j++) {\n\n            row = rows[j];\n\n            dataPoints.push({\n                timestamp: row.getTimestamp(),\n                distance: utils.round2(row.getDistance()),\n                speed: utils.round2(row.getSpeed()),\n                spm: row.getSpm(),\n                spmEfficiency: utils.round2(row.getEfficiency()),\n                latitude: row.getLatitude(),\n                longitude: row.getLongitude()\n            });\n        }\n\n        defer.resolve({\n            date: new Date(self.getSessionStart()),\n            data: dataPoints,\n            angleZ: self.getAngleZ(),\n            noiseX: self.getNoiseX(),\n            noiseZ: self.getNoiseZ(),\n            factorX: self.getFactorX(),\n            factorZ: self.getFactorZ(),\n            axis: self.getAxis()\n        });\n    });\n\n    return defer.promise();\n};\n\nSession.prototype.create = function () {\n    var self = this;\n    self.connection.executeSql(\"INSERT INTO session (id, session_start, anglez, noisex, noisez, factorx, factorz, axis, dbg_file) VALUES (?,?,?,?,?,?,?,?,?)\",\n        [this.id, this.sessionStart, this.angleZ, this.noiseX, this.noiseZ, this.factorX, this.factorZ, this.axis, this.debugFile], function (res) {\n            console.log(\"Session #\" + res.insertId + \" created\");\n            self.id = res.insertId;\n        }, function (error) {\n            console.log(error.message);\n        });\n    return this;\n};\n\nSession.prototype.finish = function () {\n    var self = this, defer = $.Deferred();\n    self.connection.executeSql(\"select max(distance) total_distance, avg(speed) avg_speed, max(speed) max_speed, avg(spm) avg_spm, max(spm) top_spm, \" +\n        \" max(efficiency) max_ef, avg(efficiency) avg_ef FROM session_data where session = ?\", [self.id], function (res) {\n\n        var record = res.rows.item(0);\n\n        self.setSessionEnd(new Date().getTime());\n        self.setDistance(record.total_distance);\n        self.setAvgSpeed(record.avg_speed);\n        self.setTopSpeed(record.max_speed);\n        self.setAvgSpm(record.avg_spm);\n        self.setTopSpm(record.top_spm);\n        self.setAvgEfficiency(record.avg_ef);\n        self.setTopEfficiency(record.max_ef);\n\n        self.connection.executeSql(\"update session set distance = ?, avg_spm = ?, top_spm = ?, avg_speed = ?, top_speed = ?, session_end = ? where id = ?\"\n            , [record.total_distance, record.avg_spm, record.top_spm, record.avg_speed, record.max_speed, self.getSessionEnd(), self.id]\n            , function (a) {\n                defer.resolve(this);\n            }, function (a) {\n                console.log('error', a);\n                defer.reject(this);\n            })\n\n\n    }, function (error) {\n        console.log('Error creating session: ' + error.message);\n        defer.reject(this);\n    });\n    return defer;\n};\n\nSession.delete = function (id) {\n    var connection = db.getConnection();\n    var defer = $.Deferred();\n    connection.transaction(function (tx) {\n        tx.executeSql(\"DELETE FROM session_data where session = ?\", [id], function () {\n            tx.executeSql(\"DELETE FROM session where id = ?\", [id], function s() {\n                defer.resolve();\n            }, function () {\n                defer.fail();\n            });\n\n        }, function error() {\n            defer.fail();\n        });\n    });\n    return defer.promise();\n};\n\n\nSession.synced = function (remoteId, id) {\n    var connection = db.getConnection();\n    var defer = $.Deferred();\n    connection.executeSql(\"update session set synced = 1, synced_at = ?, remote_id = ? where id = ?\", [new Date().getTime(), remoteId, id], function success() {\n        defer.resolve();\n    }, function error() {\n        defer.fail();\n    });\n    return defer.promise();\n};\n\nSession.startDebugSync = function (id, total) {\n    var connection = db.getConnection();\n    var defer = $.Deferred();\n    connection.executeSql(\"update session set dbg_attempt = if(dbg_attempt is null, 1, dbg_attempt + 1), dbg_tot_rows = ? where id = ?\", [total, id], function success() {\n        defer.resolve();\n    }, function error() {\n        defer.fail();\n    });\n    return defer.promise();\n};\n\nSession.debugSynced = function (id, rows) {\n    var connection = db.getConnection();\n    var defer = $.Deferred();\n    connection.executeSql(\"update session set dbg_sync_rows = dbg_sync_rows + ? where id = ?\", [rows, id], function success() {\n        defer.resolve();\n    }, function error() {\n        defer.fail();\n    });\n    return defer.promise();\n};\n\nSession.debugSyncFinished = function (id, success) {\n    var connection = db.getConnection();\n    var defer = $.Deferred();\n    connection.executeSql(\"update session set dbg_synced = ?, dbg_synced_at = ? where id = ?\", [success ? 1 : 0, new Date().getTime(), id], function success() {\n        defer.resolve();\n    }, function error() {\n        defer.fail();\n    });\n    return defer.promise();\n};\n\nSession.incrementAttempt = function (id) {\n    var connection = db.getConnection();\n    var defer = $.Deferred();\n    connection.executeSql(\"update session set dbg_attempt = dbg_attempt + 1 where id = ?\", [id], function success() {\n        defer.resolve();\n    }, function error() {\n        defer.fail();\n    });\n    return defer.promise();\n};\n\nSession.sessionsSummary = function () {\n    var defer = $.Deferred();\n    var connection = db.getConnection();\n    connection.executeSql(\"SELECT sum(distance) distance, max(top_speed) speed, sum(session_end - session_start) duration FROM session\", [], function (res) {\n        var record = res.rows.item(0);\n        defer.resolve({\n            distance: record.distance,\n            speed: record.speed,\n            duration: record.duration\n        });\n    }, function (error) {\n        defer.fail(error);\n    });\n    return defer.promise();\n};\n\n\nSession.findAllNotSynced = function (callback) {\n    var connection = db.getConnection();\n    connection.executeSql(\"SELECT * FROM session WHERE synced <> 1 OR ((datetime('now','localtime') - session_start) < (604800 * 8) AND dbg_synced = 0)\", [], function (res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n            rows.push(sessionFromDbRow(res.rows.item(i)));\n        }\n        callback(rows);\n    }, function (error) {\n        console.log('Error retrieving sessions: ' + error.message);\n    });\n};\n\nSession.all = function (callback) {\n    var self = this;\n    var connection = db.getConnection();\n    connection.executeSql(\"SELECT * FROM session order by id desc\", [], function (res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n            rows.push(sessionFromDbRow(res.rows.item(i)));\n        }\n        callback(rows);\n    }, function (error) {\n        console.log('Error retrieving sessions: ' + error.message);\n    });\n};\n\nSession.last = function () {\n    var connection = db.getConnection();\n    var defer = $.Deferred();\n    connection.executeSql(\"SELECT * FROM session order by id desc limit 1\", [], function (res) {\n\n        if (res.rows.length > 0) {\n            defer.resolve(sessionFromDbRow(res.rows.item(0)));\n            return;\n        }\n        defer.resolve(undefined);\n    }, function (error) {\n        defer.reject(error.message);\n    });\n\n    return defer.promise();\n};\n\nSession.get = function (id) {\n    var connection = db.getConnection();\n    var defer = $.Deferred();\n    connection.executeSql(\"SELECT * FROM session where id = ?\", [id], function (res) {\n\n        if (res.rows.length > 0) {\n            defer.resolve(sessionFromDbRow(res.rows.item(0)));\n            return;\n        }\n        defer.resolve(undefined);\n    }, function (error) {\n        defer.reject(error.message);\n    });\n\n    return defer.promise();\n};\n\n\nfunction sessionFromDbRow(data) {\n    var session = new Session(\n        data.session_start,\n        data.anglez,\n        data.noisex,\n        data.noisez,\n        data.factorx,\n        data.factorz,\n        data.axis,\n        data.distance,\n        data.avg_spm,\n        data.top_spm,\n        data.avg_speed,\n        data.top_speed,\n        data.session_end\n    );\n\n    session.setId(data.id);\n    session.setDebugAttempt(data.dbg_attempt);\n    session.setRemoteId(data.remote_id);\n    session.setDbgSyncedRows(data.dbg_sync_rows);\n\n    return session;\n}\n\n\nexports.Session = Session;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./model/session.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nvar connection;\n\n// Array with DDL to be applied to each version of database; Each position corresponds to a version number\nvar ddl = [\n    [\n        [\"CREATE TABLE IF NOT EXISTS settings (\",\n            \"version INTEGER NOT NULL,\",\n            \"units TEXT not null default 'K',\",\n            \"sync_wifi integer not null default 1,\",\n            \"restore_layout integer not null default 1\",\n            \")\"],\n\n        [\"CREATE TABLE IF NOT EXISTS session (\",\n            \"id INTEGER NOT NULL PRIMARY KEY,\",\n            \"remote_id TEXT,\",\n            \"session_start INTEGER NOT NULL,\",\n            \"session_end INTEGER,\",\n            \"anglez REAL NOT NULL,\",\n            \"noisex REAL NOT NULL,\",\n            \"noisez REAL NOT NULL,\",\n            \"factorx REAL NOT NULL,\",\n            \"factorz REAL NOT NULL,\",\n            \"axis INTEGER NOT NULL,\",\n            \"distance REAL,\",\n            \"avg_spm REAL,\",\n            \"avg_speed REAL,\",\n            \"top_spm REAL,\",\n            \"top_speed REAL,\",\n            \"synced INTEGER DEFAULT 0,\",\n            \"synced_at INTEGER,\",\n            \"dbg_file TEXT,\",\n            \"dbg_attempt integer,\",\n            \"dbg_tot_rows integer,\",\n            \"dbg_sync_rows INTEGER DEFAULT 0,\",\n            \"dbg_synced INTEGER DEFAULT 0,\",\n            \"dbg_synced_at INTEGER\",\n            \")\"],\n\n        [\"CREATE TABLE IF NOT EXISTS session_data (\",\n            \"id INTEGER NOT NULL PRIMARY KEY,\",\n            \"session INTEGER NOT NULL,\",\n            \"timestamp INTEGER NOT NULL,\",\n            \"distance REAL,\",\n            \"speed REAL,\",\n            \"spm INTEGER,\",\n            \"efficiency REAL\",\n            \")\"],\n        [\"insert into settings (version) values (1)\"]\n    ],\n    [\n        [\"ALTER TABLE session_data add column latitude REAL\"],\n        [\"ALTER TABLE session_data add column longitude REAL\"],\n        [\"ALTER TABLE settings add column show_touch_events_tips integer not null default 1\"],\n        [\"ALTER TABLE settings add column show_calibration_tips integer not null default 1\"],\n        [\"UPDATE settings SET version = 2\"]\n    ]\n];\n\n\nvar success = function () {\n    console.log('table created successfully')\n};\nvar error = function (e) {\n    console.log('error creating table', e);\n};\n\n\n/**\n * This method should apply all changes in ddl (currently only applies for version 0)\n */\nfunction init() {\n    connection = window.sqlitePlugin.openDatabase({name: \"sessions.db\", \"location\": 2});\n\n    determineDbVersion().then(function (version) {\n        connection.transaction(function (tx) {\n            var sql;\n            for (var d = version; d < ddl.length; d++) {\n\n                for (var i = 0; i < ddl[d].length; i++) {\n                    sql = ddl[d][i].join('');\n                    tx.executeSql(sql, [], success, error);\n                }\n            }\n        });\n    });\n}\n\n\nfunction determineDbVersion() {\n    var defer = $.Deferred();\n    connection.executeSql(\"select version from settings\", [], function success(res) {\n        defer.resolve(res.rows.item(0).version);\n    }, function error(err) {\n        defer.resolve(0);\n    });\n    return defer.promise();\n}\n\n\nexports.init = init;\nexports.getConnection = function () {\n    return connection;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./db.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\nvar db = require('../db');\n\nfunction SessionDetail(session, timestamp, distance, speed, spm, efficiency, latitude, longitude) {\n    this.connection = db.getConnection();\n    this.session = session;\n    this.timestamp = timestamp;\n    this.distance = distance || 0;\n    this.speed = speed || 0;\n    this.spm = spm;\n    this.efficiency = efficiency || 0;\n    this.latitude = latitude;\n    this.longitude = longitude;\n}\n\nSessionDetail.prototype.getSession = function () {\n    return this.session;\n}\n\nSessionDetail.prototype.setSession = function (session) {\n    this.session = session;\n}\n\nSessionDetail.prototype.getTimestamp = function () {\n    return this.timestamp;\n}\n\nSessionDetail.prototype.setTimestamp = function (timestamp) {\n    this.timestamp = timestamp;\n}\n\nSessionDetail.prototype.getDistance = function () {\n    return this.distance;\n}\n\nSessionDetail.prototype.setDistance = function (distance) {\n    this.distance = distance;\n}\n\nSessionDetail.prototype.getSpeed = function () {\n    return this.speed;\n}\n\nSessionDetail.prototype.setSpeed = function (speed) {\n    this.speed = speed;\n}\n\nSessionDetail.prototype.getSpm = function () {\n    return this.spm;\n}\n\nSessionDetail.prototype.setSpm = function (spm) {\n    this.spm = spm;\n}\n\nSessionDetail.prototype.getEfficiency = function () {\n    return this.efficiency;\n}\n\nSessionDetail.prototype.setEfficiency = function (efficiency) {\n    this.efficiency = efficiency;\n}\n\nSessionDetail.prototype.getLatitude = function () {\n    return this.latitude;\n}\n\nSessionDetail.prototype.setLatitude = function (latitude) {\n    this.latitude = latitude;\n}\n\nSessionDetail.prototype.getLongitude = function () {\n    return this.longitude;\n}\n\nSessionDetail.prototype.setLongitude = function (longitude) {\n    this.longitude = longitude;\n}\n\nSessionDetail.prototype.save = function () {\n    this.connection.executeSql(\"INSERT INTO session_data (session, timestamp, distance, speed, spm, efficiency, latitude, longitude) VALUES (?,?,?,?,?,?,?,?)\",\n        [this.session, this.timestamp, this.distance, this.speed, this.spm, this.efficiency, this.latitude, this.longitude], function (res) {\n            console.log(\"Session Data#\" + res.insertId + \" created\");\n        }, function (error) {\n            console.log('Error creating session: ' + error.message);\n        });\n};\n\nSessionDetail.get = function(sessionId, callback) {\n    var connection = db.getConnection();\n    connection.executeSql(\"SELECT timestamp, distance, speed, spm, efficiency, latitude, longitude FROM session_data WHERE session = ?\",[sessionId], function (res) {\n        var rows = [], data;\n        for (var i = 0; i < res.rows.length; i++) {\n            data = res.rows.item(i);\n            rows.push(new SessionDetail(sessionId, data.timestamp, data.distance, data.speed, data.spm, data.efficiency, data.latitude, data.longitude));\n        }\n        callback(rows);\n    }, function (error) {\n        console.log('Error retrieving sessions: ' + error.message);\n    });\n};\n\nexports.SessionDetail = SessionDetail;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./model/session-detail.js\n ** module id = 9\n ** module chunks = 0\n **/","var Utils = require('../utils/utils.js');\nvar lastEvent = undefined, retries = 0;\n\n//var asteroid = new Asteroid(\"local.gopaddler.com:3000\", false);\nvar asteroid = new Asteroid(\"app.gopaddler.com\", true, function intercept (data) {\n    lastEvent = data;\n});\n\nvar serverAvailable = function (d) {\n    var defer = d || $.Deferred();\n\n    if (retries >= 3) defer.reject();\n\n    // If no network, server is for sure not available\n    if (!Utils.isNetworkConnected()) {\n        return defer.reject();\n    }\n\n    if (lastEvent !== undefined) {\n        retries++;\n        setTimeout(function () {\n            serverAvailable(defer);\n        }, 1000);\n    } else {\n\n        if (lastEvent && (lastEvent.type === \"socket_close\"\n            || lastEvent.type === \"socket_error\")) {\n            defer.reject();\n        } else {\n            defer.resolve();\n        }\n    }\n    return defer.promise();\n};\n\n/**\n * Load user information from local storage.\n *\n * @returns {*}\n *\n * @private\n */\nfunction _localLogin() {\n\n    var defer = $.Deferred(),\n        serializedUser = localStorage.getItem('user'),\n        user;\n\n    serverAvailable().done(function serverIsAvailable() {\n        defer.reject();\n\n    }).fail(function serverNotAvailable() {\n\n            if (serializedUser) {\n\n                user = JSON.parse(serializedUser);\n\n                asteroid.loggedIn = true;\n                asteroid.userId = user._id;\n                asteroid.user = user;\n\n                _finishLogin(defer, user);\n\n            } else {\n\n                defer.reject();\n            }\n    });\n\n    return defer.promise();\n}\n\n\n/**\n * Authenticate the user remotely.\n *\n * @returns {*}\n *\n * @private\n */\nfunction _remoteLogin() {\n\n    var defer = $.Deferred();\n\n    if (Utils.isNetworkConnected()) {\n\n        asteroid.loginWithFacebook().then(function (user) {\n\n            _finishLogin(defer, user);\n\n        }).catch(function (err) {\n\n            defer.reject(err);\n        });\n\n    } else {\n\n        defer.reject('No network');\n    }\n\n    return defer.promise();\n}\n\n\n/**\n *\n * @param defer\n * @param user\n *\n * @private\n */\nfunction _finishLogin(defer, user) {\n    _storeUser(user);\n    defer.resolve(user);\n}\n\n\n/**\n * Register the user for this session and persist it in the local storage.\n *\n * @param user\n *\n * @private\n */\nfunction _storeUser(user) {\n    asteroid.user = user;\n    localStorage.setItem('user', JSON.stringify(user));\n}\n\n\n/**\n *\n * @private\n */\nfunction _call() {\n\n    var defer = $.Deferred();\n\n    asteroid.call.apply(asteroid, arguments).result.then(function (response) {\n\n        defer.resolve(response);\n\n    }).catch(function (err) {\n\n        defer.reject(err);\n    });\n\n    return defer.promise();\n}\n\n\n/**\n * Authentication methods.\n */\nexports.Auth = {\n\n    login: function () {\n\n        var defer = $.Deferred();\n\n        _localLogin().done(function (user) {\n\n            defer.resolve(user);\n\n            // even if the local authentication succeeds go ahead and try to login remotely\n            _remoteLogin();\n\n        }).fail(function () {\n\n            // local login failed, let's try the remote login\n            _remoteLogin().done(defer.resolve).fail(defer.reject);\n        });\n\n        return defer.promise();\n    },\n\n\n    logout: function () {\n\n        var defer = $.Deferred();\n\n        asteroid.logout().then(function () {\n\n            // remove from local storage\n            localStorage.removeItem('user');\n\n            // set values to undefined\n            asteroid.user = undefined;\n\n            defer.resolve();\n\n        }).catch(function (err) {\n\n            defer.reject(err);\n        });\n\n\n        return defer.promise();\n    }\n};\n\n\n/**\n * Users methods.\n */\nexports.User = {\n\n\n    set: function (user) {\n        asteroid.user = user;\n        asteroid.userId = user._id;\n    },\n\n\n    get: function () {\n        return asteroid.user;\n    },\n\n\n    getId: function () {\n        return asteroid.userId;\n    },\n\n\n    getProfile: function () {\n        return asteroid.user.profile;\n    },\n\n\n    saveDevice: function (device) {\n        return _call('saveUserDevice', device);\n    }\n};\n\n\n/**\n * Training Session methods.\n */\nexports.TrainingSessions = {\n\n    save: function (trainingSession) {\n\n        return _call('saveTrainingSession', trainingSession);\n    }\n};\n\n\n/**\n * Debug Session methods.\n */\nexports.DebugSessions = {\n\n    save: function (debugSession) {\n\n        return _call('saveTrainingSessionDebug', debugSession);\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./server/api.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict'\n\nvar utils = require('../utils/utils');\n\nvar SPM_STROKE_COUNT = 8;\n\nfunction StrokeDetector(session, calibration, onStrokeDetected, onAccelerationTriggered) {\n    var self = this;\n    self.watchId = undefined;\n\n    self.max = 0;\n    self.min = 0;\n    self.maxAt = undefined;\n    self.minAt = undefined;\n    self.maxs = [];\n    self.mins = [];\n    self.checkpoint = undefined;\n    self.positiveMaxs = [];\n    self.negativeMaxs = [];\n    self.positiveThreshold = undefined;\n    self.negativeThreshold = undefined;\n    self.strokes = [];\n    self.events = [];\n    self.intervals = [];\n    self.lastStroke = new Event(0, 0, 0, 0, /* detected = */ new Event(0, 0, 0, 0, undefined));\n    self.counter = 0;\n    self.lastEvent = undefined;\n\n    self.intervalId = undefined;\n    self.session = session;\n    self.debugAcceleration = [];\n    self.calibration = calibration;\n\n    self.debug = false;\n\n    // used in simulation, to represent strokes in chart\n    self.onStrokeDetectedListener = onStrokeDetected || function () {};\n    self.onAccelerationTriggeredListener = onAccelerationTriggered || function () {};\n    self.onStrokeRateChangedListener = function () {};\n    self.onThresholdChangedListener = function() {};\n}\n\nStrokeDetector.exceptions = {\n    SD_EXCP_STALLED:  \"STALLED\"\n}\n\nStrokeDetector.prototype.onStrokeRateChanged = function (callback) {\n    var self = this;\n    self.onStrokeRateChangedListener = callback;\n}\n\nStrokeDetector.prototype.onAccelerationTriggered = function (callback) {\n    var self = this;\n    self.onAccelerationTriggeredListener = callback;\n}\n\nStrokeDetector.prototype.onThresholdChanged = function (callback) {\n    var self = this;\n    self.onThresholdChangedListener = callback;\n}\n\nStrokeDetector.prototype.onStrokeDetected = function (callback) {\n    var self = this;\n    self.onStrokeDetectedListener = callback;\n}\n\nStrokeDetector.prototype.stop = function () {\n    var self = this;\n    if (navigator.accelerometer)\n        navigator.accelerometer.clearWatch(self.watchId);\n    clearInterval(self.intervalId);\n}\n\nStrokeDetector.prototype.start = function () {\n    var self = this, value;\n    function onSuccess(acceleration) {\n\n        // filter\n        value = self.filter(acceleration);\n\n        // call event handler\n        self.process(acceleration, value);\n\n        // for debug\n        self.onAccelerationTriggeredListener(acceleration, value);\n    }\n\n    function onError() {\n        console.log('onError!');\n    }\n\n\n    if (!self.calibration) {\n        console.log(\"alert: missing calibration\");\n        return;\n    }\n\n    var options = { frequency: 40 };\n    try {\n        self.watchId = navigator.accelerometer.watchAcceleration(onSuccess, onError, options);\n    } catch (e) {\n        console.log('hmmm... no navigator.accelerometer found?!?!');\n    }\n\n    self.intervalId = setInterval(self.refreshSPM.bind(self), 1500);\n};\n\nStrokeDetector.prototype.refreshSPM = function () {\n    var self = this, range, result;\n    range = self.strokes.slice(-SPM_STROKE_COUNT);\n    result = self.calculateSPM(range) || {};\n\n    if (!isNaN(result.spm))\n        self.onStrokeRateChangedListener(result.spm, result.interval);\n\n    // keep only last 8 strokes, without any clean up of stroke rate calculation\n    self.strokes = self.strokes.slice(-SPM_STROKE_COUNT);\n\n    if (result.spm === 0) {\n        self.onStrokeRateChangedListener(0, undefined);\n        self.strokes = [];\n    }\n    return result.spm;\n};\n\n\n/**\n * Process events coming from accelerometer\n *\n * @param acceleration\n * @param value\n */\nStrokeDetector.prototype.process = function (acceleration, value) {\n    var self = this, current, stroke;\n\n    if (self.checkpoint === undefined)\n        self.checkpoint = acceleration.timestamp;\n\n    value = utils.round2(value);\n\n    self.updateThresholds(acceleration, value);\n\n    if (self.positiveThreshold === undefined) return;\n\n    current = new Event(acceleration.timestamp, value, self.positiveThreshold, self.negativeThreshold, undefined);\n\n    if (self.isAccelerationCrossingThreshold(current, self.lastEvent)\n        && (stroke = self.findMaxAbovePositiveThreshold(self.events, acceleration, self.lastStroke)) !== undefined) {\n        stroke.setDetected(current);\n\n        var lost = self.didWeLostOne(self.events, stroke, self.lastStroke);\n\n        if (!lost) {\n\n            // add current\n            self.counter++;\n            stroke.setStroke(self.counter);\n            self.strokes.push(stroke);\n            self.onStrokeDetectedListener(stroke);\n\n            self.lastStroke = stroke;\n        }\n        // lost is before current\n        else if (lost.position === -1) {\n\n            // add lost\n            self.counter++;\n            lost.stroke.setStroke(self.counter);\n            self.strokes.push(lost.stroke);\n            self.onStrokeDetectedListener(lost.stroke);\n            self.lastStroke.getDetected().relocate(lost.stroke);\n\n            // add current\n            self.counter++;\n            stroke.setStroke(self.counter);\n            self.strokes.push(stroke);\n            self.onStrokeDetectedListener(stroke);\n\n            self.lastStroke = stroke;\n\n        }\n        // lost is after current\n        else {\n\n            // add current\n            self.counter++;\n            stroke.setStroke(self.counter);\n            self.strokes.push(stroke);\n            self.onStrokeDetectedListener(stroke);\n            self.lastStroke.getDetected().relocate(stroke);\n\n            // add lost\n            self.counter++;\n            lost.stroke.setStroke(self.counter);\n            self.strokes.push(lost.stroke);\n            self.onStrokeDetectedListener(lost.stroke);\n\n            self.lastStroke = lost.stroke;\n        }\n\n        self.events = [];\n\n    } else {\n        self.events = self.consolidate(self.events, current);\n    }\n\n    if (current.isSmallerThanOrEquealToNegativeThreshold() && self.lastStroke) {\n        self.lastStroke.getDetected().add(current);\n    }\n\n    self.lastEvent = current;\n};\n\n/**\n * Calculate positive and negative threshold\n * @param acceleration\n * @param value\n */\nStrokeDetector.prototype.updateThresholds = function (acceleration, value) {\n    var self = this;\n\n    if (value > self.max) {\n        self.max = value;\n        self.maxAt = acceleration.timestamp;\n    }\n    if (value < self.min) {\n        self.min = value;\n        self.minAt = acceleration.timestamp;\n    }\n\n    // recalculate every 1 second\n    if ((acceleration.timestamp - self.checkpoint) <= 1000)\n        return;\n\n    self.checkpoint = acceleration.timestamp;\n\n    if (self.positiveMaxs.length === 3) self.positiveMaxs.shift();\n    if (self.negativeMaxs.length === 3) self.negativeMaxs.shift();\n\n    self.positiveMaxs.push(self.max);\n    self.negativeMaxs.push(self.min);\n\n    self.max = 0;\n    self.min = 0;\n\n    if (self.positiveMaxs.length === 3) {\n        self.positiveThreshold =  utils.round2(self.positiveMaxs.avg() * .5);\n        self.negativeThreshold = utils.round2(self.negativeMaxs.avg() * .5);\n        self.onThresholdChangedListener.apply({}, [acceleration.timestamp\n            , self.positiveThreshold, self.negativeThreshold]);\n    }\n};\n\n/**\n * Filter acceleration based on calibration\n *\n * @param acceleration\n * @returns {number}\n */\nStrokeDetector.prototype.filter = function(acceleration) {\n    var self = this;\n    var factor, adjustment, value;\n    if (self.calibration.getPredominant() == 0) {\n        factor = self.calibration.getFactorX();\n        adjustment = self.calibration.getNoiseX();\n        value = acceleration.x;\n    } else {\n        factor = self.calibration.getFactorZ();\n        adjustment = self.calibration.getNoiseZ();\n        value = acceleration.z;\n    }\n\n    return (value - adjustment) * factor;\n}\n\n/**\n * Checks if last stroke was tracked before negative threshold and current one is after!\n * @param current\n * @param previous\n * @returns {boolean|*|*}\n */\nStrokeDetector.prototype.isAccelerationCrossingThreshold = function(current, previous) {\n    return previous != null && current != null && previous.isBiggerThanNegativeThreshold() && current.isSmallerThanOrEquealToNegativeThreshold();\n}\n\nStrokeDetector.prototype.findMaxAbovePositiveThreshold = function (events, acceleration, lastStroke) {\n\n    var max = undefined;\n    for (var i = 0; i < events.length; i++) {\n        if (events[i].isBiggerThanPositiveThreshold()) {\n            if (!events[i].isDiscarded() && (!max || events[i].getAcceleration() > max.getAcceleration())) {\n                max = events[i];\n            }\n        }\n    }\n\n    if (!max)\n        return undefined;\n\n    if (max.getSampleAt() - lastStroke.getSampleAt() <= 300 || acceleration.timestamp - lastStroke.getDetected().getSampleAt() <= 300) {\n        // This max won't ever validate... we need to give the chance to the next max to validate a new stroke!!\n        max.setDiscarded(true);\n        return undefined;\n    }\n\n    return max;\n}\n\n/**\n * Check if we failed to detect strokes between the last one and current potential stroke\n *\n * @param {Array} events\n * @param {Event} current   current stroke\n * @param {Event} last      previous detected stroke\n * @returns {*}\n */\nStrokeDetector.prototype.didWeLostOne = function (events, current, last) {\n    var self = this;\n    var indexOfCurrent = indexOf(events, current);\n\n    // Search for stroke before max\n    var pre = before(after(events.slice(0, indexOfCurrent), 300), 300);\n    var post = before(after(events.slice(indexOfCurrent + 1, events.length - 1), 300), 300);\n    var data = pre.concat(post);\n\n    if (data.length <= 4)\n        return undefined;\n\n    return self.findFuzzyStroke(data, current, last);\n};\n\n\n/**\n * Try to detect strokes that don't cross thresholds, but may feet other criteria\n *\n * @param events\n * @param current   current stroke\n * @param last      last detected stroke\n * @returns {*}\n */\nStrokeDetector.prototype.findFuzzyStroke = function (events, current, last) {\n    var self = this, cadence, mg;\n\n    var extremity = minAndMax(events);\n    var max = extremity.max, min = extremity.min;\n    max.setDetected(min);\n    max.setFuzzy(true);\n\n    // if max is before current detected stroke, then we may find a lost stroke before current one\n    if (max.getSampleAt() < current.getSampleAt()) {\n        cadence = self.strokes.cadence();\n        mg = magnitude(self.strokes);\n\n        if (self.isValidStroke(max, last, current, cadence, mg)) {\n            return {\n                stroke: max,\n                position: -1\n            };\n        }\n        return undefined;\n    }\n\n    // lost is after current\n    if (max.getSampleAt() > current.getSampleAt()) {\n\n        cadence = self.strokes.cadence();\n        mg = magnitude(self.strokes);\n\n\n        max.getDetected(current.getDetected());\n        var before = new Event(current.getSampleAt(), current.getAcceleration(), current.positiveThreshold, current.negativeThreshold, min);\n\n        // check if lost makes a valid stroke if placed after current\n        if (self.isValidStroke(max, before, undefined, cadence, mg)\n            // check if current makes a valid stroke with last detected stroke\n            && self.isValidStroke(current, last, max, cadence, mg)) {\n\n            current.setDetected(min);\n            return {\n                stroke: max,\n                position: 1\n            }\n        }\n\n        return undefined;\n    }\n\n    return undefined;\n}\n\n\nStrokeDetector.prototype.isValidStroke = function(stroke, before, after, cadence, magnitude) {\n    var self = this;\n    var log = function (reason) {\n        if (self.debug === false) return;\n        console.log(self.counter, reason);\n    }\n\n    if (!cadence) {\n        log('no cadence');\n        return false;\n    }\n\n    // its within acceptable difference to current cadence\n    if (Math.abs((cadence - (stroke.getSampleAt() - before.getSampleAt())) / cadence)>0.4) {\n        log('it\\'s not within accepetable difference to current cadence; actual: ' + (stroke.getSampleAt() - before.getSampleAt())\n            + '; Cadence: ' + cadence + \"; variation: \"\n            + Math.abs((cadence - (stroke.getSampleAt() - before.getSampleAt())) / cadence));\n        return false;\n    }\n\n    // does not create a stroke whose interval is less than 300 milis\n    if (stroke.getSampleAt() - before.getSampleAt() < 300 ||  (after && Math.abs(stroke.getSampleAt() - after.getSampleAt()) < 300)) {\n        log('stroke interval would be < 300');\n        return false;\n    }\n\n    // interval between detected must also be > 300\n    if (stroke.getDetected().getSampleAt() - before.getDetected().getSampleAt() < 300) {\n        log('interval between detected would be < 300');\n        return false;\n    }\n\n    if ((stroke.getAcceleration() - stroke.getDetected().getAcceleration()) / magnitude < .8) {\n        log('Variation in acceleration is to low to consider a stroke');\n        return false;\n    }\n\n\n    return true;\n}\n\n/**\n * Ensures that we don't keep events that are older than 3 seconds\n * @param {Array} events\n * @param value\n * @returns {*}\n */\nStrokeDetector.prototype.consolidate = function (events, value) {\n    var self = this;\n    events.push(value);\n    if (value.getSampleAt() - events[0].getSampleAt() <= 3000) {\n        return events;\n    }\n    for (var i = (events.length - 1); i >= 0; i--) {\n        if (value.getSampleAt() - events[i].getSampleAt() > 3000)\n            break;\n    }\n    if (i > 0)\n        events = events.slice(events.length - i);\n    return events;\n};\n\n\nStrokeDetector.prototype.calculateSPM = function (strokes) {\n    var self = this;\n\n    // if we don't have strokes in the past 3 seconds, set it to zero\n    if (self.lastStroke && self.lastEvent && (self.lastEvent.getSampleAt() - self.lastStroke.getDetected().getPosition() > 3000)) {\n        return {spm: 0, interval: 0};\n    }\n\n    if (strokes.length < SPM_STROKE_COUNT)\n        return undefined;\n\n    // --- look for strokes that don't feet well in current stroke rate and discard them (replace by average)\n    var c = self.calculateIntervals(strokes);\n    var intervals = c.intervals;\n    var map = c.map;\n    var avg = intervals.avg();\n    var updated = false;\n    var variance;\n    var adjusted = 0;\n\n    for (var i = intervals.length - 1; i >= 0; i--) {\n        variance = (avg - intervals[i]) / avg;\n\n        if (variance > 0 && variance >= .4) {\n\n            // after 2 strokes, if post strokes are inline with avg, it's probably because we counted one stroke\n            // more than we should\n            if (intervals.length - i > 1 && adjusted == 0) {\n\n                var which = self.pickBestMatch(avg, map[i][1], map[i][0]);\n                var remove;\n\n                // if best match is 1st, remove second\n                if (which === 1) {\n                    remove = map[i][0];\n                } else {\n                    remove = map[i][1];\n                }\n\n//                console.log('removing stroke', remove.getStroke());\n                map[i][0].setDiscarded(true);\n                strokes.splice(indexOf(strokes, remove), 1);\n\n                adjusted = 0;\n            } else {\n//                console.log('strokes ', map[i][1].getStroke(), map[i][0].getStroke(), 'are probably a single stroke', variance);\n            }\n\n            updated = true;\n            adjusted++;\n            intervals.splice(i, 1);\n\n        } else if (variance < 0 && variance <= -.4) {\n            updated = true;\n//            console.log('lost strokes between ', map[i][1].getStroke(), map[i][0].getStroke());\n            intervals.splice(i, 1);\n        }\n    }\n\n    if (intervals.length === 0) {\n        // happened when stopped rowing and all the intervals were far from the variance!\n        return 0;\n    }\n\n    if (updated)\n        avg = intervals.avg();\n\n    // Calculate stroke rate\n    // avg interval between strokes in mili seconds (thus the division by 1000)\n    var strokeRate = 60 / (avg / 1000);\n\n//    console.log(\"spm: \", Math.round(strokeRate), map[0][0].getStroke()\n//        , map[1][0].getStroke(), map[2][0].getStroke(), map[3][0].getStroke());\n    return {spm: Math.round(strokeRate), interval: avg};\n};\n\n\n/**\n * When we find an extra stroke that does not feet current cadence, we have to eliminate that stroke; this method will\n * decide which stroke (from the 2 that form an interval that is to small) is to be removed\n * @param avg\n * @param first\n * @param second\n * @returns {number}\n */\nStrokeDetector.prototype.pickBestMatch = function (avg, first, second) {\n    var self = this;\n    var positionFirst = indexOf(self.strokes, first);\n    var positionSecond = indexOf(self.strokes, second);\n    var beforeFirst = self.strokes[positionFirst - 1];\n    var afterSecond = self.strokes[positionSecond + 1 ];\n\n    var varianceFirstBefore = Math.abs((avg - (first.getDetected().getPosition() - beforeFirst.getDetected().getPosition())) / avg);\n    var varianceFirstAfter = Math.abs((avg - (afterSecond.getDetected().getPosition() - first.getDetected().getPosition())) / avg);\n\n    if (varianceFirstBefore < .4 && varianceFirstAfter < .4)\n        return 1;\n\n    var varianceSecondBefore = Math.abs((avg - (second.getDetected().getPosition() - beforeFirst.getDetected().getPosition())) / avg);\n    var varianceSecondAfter = Math.abs((avg - (afterSecond.getDetected().getPosition() - second.getDetected().getPosition())) / avg);\n\n    if (varianceSecondBefore < .4 && varianceSecondAfter < .4)\n        return 2;\n\n    if ((varianceFirstBefore + varianceFirstAfter) < (varianceSecondBefore + varianceSecondAfter)) {\n        return 1;\n    } else {\n        return 2;\n    }\n};\n\n/**\n * Calculate interval between strokes\n */\nStrokeDetector.prototype.calculateIntervals = function (strokes) {\n    var self = this, intervals = [], map = [];\n    for (var i = 1, length = strokes.length; i < length; i++) {\n        map.push([strokes[i], strokes[i - 1]]);\n        // use minimums to calculate intervals (instead of max's) because they are tipically more stable!\n        // use position, given that position assigns a middle position between all accelerations bellow negative threshold\n        intervals.push(strokes[i].getDetected().getPosition() - strokes[i - 1].getDetected().getPosition());\n    }\n    return {\n        intervals: intervals,\n        map: map\n    };\n}\n\n\n\n// Event\nfunction Event(timestamp, acceleration, pt, nt, detected) {\n    this._timestamp = timestamp;\n    this._acceleration = acceleration;\n    this._positiveThreshold = pt;\n    this._negativeThreshold = nt;\n    this._detected = detected;\n    this._fuzzy = false;\n    this._positions = [];\n    this._stroke = -1;\n    this._discarded = false;\n}\n\nEvent.prototype.getSampleAt = function() {\n    return this._timestamp;\n};\n\nEvent.prototype.getAcceleration = function() {\n    return this._acceleration;\n};\n\nEvent.prototype.isSmallerThanOrEquealToNegativeThreshold = function () {\n    return this._acceleration <= this._negativeThreshold;\n};\n\nEvent.prototype.isBiggerThanNegativeThreshold = function () {\n    return this._acceleration > this._negativeThreshold;\n};\n\nEvent.prototype.isBiggerThanPositiveThreshold = function () {\n    return this._acceleration > this._positiveThreshold;\n};\n\nEvent.prototype.setDetected = function (detected) {\n    this._detected = detected;\n};\n\nEvent.prototype.getDetected = function () {\n    return this._detected;\n};\n\nEvent.prototype.setStroke = function (stroke) {\n    this._stroke = stroke;\n};\n\nEvent.prototype.getStroke = function() {\n    return this._stroke;\n};\n\nEvent.prototype.setFuzzy = function (fuzzy) {\n    this._fuzzy = fuzzy;\n};\n\nEvent.prototype.isFuzzy = function () {\n    return this._fuzzy === true;\n};\n\nEvent.prototype.add = function (event) {\n    this._positions.push(event);\n};\n\nEvent.prototype.setDiscarded = function (discarded) {\n    this._discarded = discarded;\n}\n\nEvent.prototype.isDiscarded = function () {\n    return this._discarded;\n}\n\nEvent.prototype.getPosition = function() {\n    if (this._positions.length > 2) {\n        return this._positions[Math.floor(this._positions.length / 2)].getSampleAt();\n    } else {\n        return this.getSampleAt();\n    }\n};\n\nEvent.prototype.relocate = function (before) {\n    for (var i = 0; i < this._positions.length; i++) {\n        if (this._positions[i].getSampleAt() > before.getSampleAt()) {\n            this._positions.splice(i);\n            return;\n        }\n    }\n}\n\n\nArray.prototype.avg = function () {\n    if (this.length ===0) return 0;\n    var value = 0;\n    for (var i = 0; i < this.length; i++) {\n        value += this[i];\n    }\n    return value / this.length;\n};\n\n\n// calculates cadence based on 5 strokes\nArray.prototype.cadence = function() {\n    if (this.length < 5) return undefined;\n    var data = this.slice(0), i = 0, total = 0, current, previous;\n    for (var j = data.length; i <= 5; j--) {\n        current = data[j];\n        if (!previous) {\n            previous = current;\n            i++;\n            continue;\n        }\n\n        total += previous.getSampleAt() - current.getSampleAt();\n\n        previous = current;\n        i++;\n    }\n\n    return total / (i - 1);\n};\n\n\n/**\n *\n * @param events\n * @param value\n * @returns {number}\n */\nfunction indexOf(events, value) {\n    if (events.length === 0) return -1;\n\n    for (var i = 0; i < events.length; i++) {\n        if (events[i] === value) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n\n\n/**\n * remove all events until 300 milis have passed\n * @param list\n * @param milis\n */\nfunction after(list, milis) {\n    if (list.length == 0)\n        return [];\n\n    var first = list[0].getSampleAt();\n    for (var i = 0; i < list.length; i++) {\n\n        if (list[i].getSampleAt() > first + milis)\n            break;\n    }\n    return list.slice(i, list.length);\n}\n\n/**\n * Remove from end\n *\n * @param list\n * @param milis\n * @returns {Array}\n */\nfunction before(list, milis) {\n    if (list.length == 0)\n        return [];\n    var last = list[list.length - 1].getSampleAt();\n    for (var i = (list.length - 1); i >= 0; i--) {\n\n        if (list[i].getSampleAt() < last - milis)\n            break;\n    }\n    return list.slice(0, i);\n}\n\n/**\n * calculate min and max from a list of events\n * @param events\n */\nfunction minAndMax(events) {\n    // search max and min in events\n    var max = events[0], min = events[0];\n    for (var i = 0; i < events.length; i++) {\n\n        if (events[i].getAcceleration() > max.getAcceleration()) {\n            max = events[i];\n        }\n\n        if (events[i].getAcceleration() < min.getAcceleration()) {\n            min = events[i];\n        }\n    }\n\n    return {\n        min: min,\n        max: max\n    }\n}\n\nfunction magnitude(strokes) {\n    var magnitude = 0;\n    var i;\n    for (i = 0; i < strokes.length; i++) {\n        magnitude += strokes[i].getAcceleration() - strokes[i].getDetected().getAcceleration();\n    }\n    return magnitude / i;\n}\n\nexports.StrokeDetector = StrokeDetector;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./core/stroke-detector.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nfunction Timer($parent) {\n    this.$parent = $parent;\n\n    this.second = 0;\n    this.minute = 0;\n    this.hour = 0;\n    this.duration = 0;\n    this.listener = function(){};\n}\n\nTimer.prototype.start = function(listener) {\n    this.listener = listener;\n    this.timer();\n}\n\nTimer.prototype.pause = function () {\n    clearInterval(this.intervalId);\n}\n\nTimer.prototype.resume = function () {\n    this.timer(this.duration);\n}\n\nTimer.prototype.stop = function() {\n    var self = this;\n    clearInterval(self.intervalId);\n}\n\nTimer.prototype.timer = function(offset) {\n    var self = this\n        , start, time, elapsed;\n\n    offset = offset || 0;\n\n    start = new Date().getTime();\n    this.intervalId = setInterval(function () {\n        time = (new Date().getTime() + offset) - start;\n        elapsed = Math.round(time / 1000);\n        self.duration = time;\n\n        self.minute = Math.floor(elapsed / 60);\n        self.second = elapsed - self.minute * 60;\n\n        if (self.minute > 0) {\n            self.hour = Math.floor(self.minute / 60);\n            self.minute = self.minute - self.hour * 60;\n        }\n\n        self.listener(self.toString());\n\n    }, 1000);\n}\n\nTimer.prototype.zeroPad = function (value) {\n    if (value < 10) {\n        value = \"0\" + value;\n    }\n    return value;\n}\n\nTimer.prototype.toString = function () {\n    return this.zeroPad(this.hour) + ':' + this.zeroPad(this.minute) + ':' + this.zeroPad(this.second);\n}\n\n\nexports.Timer = Timer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./measures/timer.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\nvar GPS = require('../utils/gps').GPS;\n\n\nfunction Distance() {\n    this.counter = 0;\n    this.distance = 0;\n    this.previous = undefined;\n\n}\n\nDistance.prototype.calculate = function (position) {\n\n    if (this.previous !== undefined) {\n        this.takenAt = new Date().getTime();\n        this.distance += GPS.calcDistance(this.previous, position);\n    }\n\n    this.previous = position;\n    return this.distance;\n};\n\nDistance.prototype.getTakenAt = function () {\n    return this.takenAt;\n}\n\nDistance.prototype.getValue = function () {\n    return this.distance;\n};\n\nDistance.prototype.getLatitude = function () {\n    return (this.previous || {coords: {}}).coords.latitude;\n}\n\nDistance.prototype.getLongitude = function () {\n    return (this.previous || {coords: {}}).coords.longitude;\n}\n\nexports.Distance = Distance;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./measures/distance.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\nvar utils = require('../utils/utils');\n\nfunction Speed() {\n    this.value = 0;\n    this.speeds = [];\n}\n\n\nSpeed.prototype.calculate = function (position, distance) {\n\n    // don't display speed until we reach 10 meters\n    if (distance <= 0.01) {\n        return this.value;\n    }\n\n    this.speeds.push(position.coords.speed * 3.6);\n\n    if (this.speeds.length > 3) {\n        this.speeds.shift();\n    }\n\n    if (this.speeds.length === 3) {\n        this.value = utils.avg(this.speeds);\n    }\n\n    return this.value;\n};\n\nSpeed.prototype.reset = function () {\n    this.value = 0;\n    this.speeds = [];\n};\n\nSpeed.prototype.getValue = function () {\n    return this.value;\n};\n\nexports.Speed = Speed;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./measures/speed.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\nvar utils = require('../utils/utils');\n\nfunction Pace(convertToImperial) {\n    this.value = 0;\n    this.convertToImperial = convertToImperial;\n}\n\nPace.prototype.calculate = function (speed) {\n    var value;\n    if (this.convertToImperial === true) {\n        value = 60 / utils.kmToMiles(speed);\n    } else {\n        value = 60 / speed;\n    }\n\n    if (isNaN(value) || !isFinite(value)) return 0;\n\n    var decimal = (value % 1);\n    var minutes = value - decimal;\n    var seconds = Math.round(decimal * 60);\n\n    this.value = minutes + \":\" + utils.lpad(seconds, 2);\n\n    return this.value;\n};\n\n\nPace.prototype.getValue = function () {\n    return this.value;\n};\n\nexports.Pace = Pace;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./measures/pace.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\nvar utils = require('../utils/utils');\n\nfunction StrokeEfficiency() {}\n\n\nStrokeEfficiency.prototype.calculate = function (speed, interval) {\n    if (speed === undefined || speed === 0) return 0;\n\n    // No strokes detected... set to zero\n    if (interval === undefined || interval === 0) {\n        return 0;\n    }\n\n    var metersPerSecond = (speed * 1000) / 60 / 60;\n    return metersPerSecond * (interval / 1000);\n};\n\n\nexports.StrokeEfficiency = StrokeEfficiency;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./measures/efficiency.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\n\nvar MeasureFactory = require('./measure.js').Measure;\nvar utils = require('../utils/utils');\n\nvar Field = function(element, type, size, context) {\n    var self = this;\n    size = size || 'small';\n    self.$element = $(element);\n    self.createDomStructure(size);\n    self.speed = size === 'small' ? 300 : 200;\n\n\n    self.$measures = self.$element.find('.measures');\n    self.length = self.$measures.find('div').length;\n    self.width = self.$element.width();\n\n    self.positions = [];\n    self.measures = {};\n    self.current = {};\n    self.context = context;\n    self.convertToImperial = context.preferences().isImperial();\n\n    self.options = {};\n\n    self.init(type || 0, size);\n};\n\nField.prototype.createDomStructure = function (size) {\n    this.$element.empty();\n\n    if (size === 'small') {\n        $([\n            '<div class=\"measures\">',\n            '    <div class=\"measure\" data-type=\"timer\"></div>',\n            '    <div class=\"measure\" data-type=\"speed\"></div>',\n            '    <div class=\"measure\" data-type=\"distance\"></div>',\n            '    <div class=\"measure\" data-type=\"pace\"></div>',\n            '    <div class=\"measure\" data-type=\"spm\"></div>',\n            '    <div class=\"measure\" data-type=\"efficiency\"></div>',\n            '</div>'\n        ].join('')).appendTo(this.$element);\n    } else {\n\n        $([\n            '<div class=\"measures\">',\n            '    <div class=\"measure\" data-type=\"speed\"></div>',\n            '    <div class=\"measure\" data-type=\"distance\"></div>',\n            '    <div class=\"measure\" data-type=\"pace\"></div>',\n            '    <div class=\"measure\" data-type=\"spm\"></div>',\n            '    <div class=\"measure\" data-type=\"efficiency\"></div>',\n            '</div>'\n        ].join('')).appendTo(this.$element);\n    }\n};\n\nField.DEFAULTS = {\n    speed: 500\n};\n\n\nvar FIELD_SETTINGS = {\n    timer: {\n        label: \"Duration\",\n        init: '00:00:00'\n    },\n    speed: {\n        label: \"Speed\",\n        init: 0\n    },\n    distance: {\n        label: \"Distance\",\n        init: 0\n    },\n    spm: {\n        label: \"Stroke Rate\",\n        init: 0\n    },\n    efficiency: {\n        label: \"Distance per Stroke\",\n        init: 0\n    },\n    pace: {\n        label: \"Pace\",\n        init: 0\n    }\n};\n\nField.prototype.init = function (initialType, size) {\n    var self = this, position = 0;\n\n    // index positions\n    var $dom, type, instance, options;\n    self.$measures.find('.measure').each(function (i, dom) {\n        $dom = $(dom);\n        type = $dom.data('type');\n\n        if (type === initialType) position = i;\n\n        options = FIELD_SETTINGS[type];\n\n        instance = MeasureFactory.get(size, $dom, options.label, self.context.getUnit(type, size === 'large'), options.init);\n        instance.render();\n        self.positions[i] = {position: i, type: type, $dom: $dom, instance: instance};\n        self.options[type] = options;\n    });\n\n\n    // -- init slick and handle slick events\n    setTimeout(function (position, initialType) {\n        return function () {\n            self.$measures.slick({\n                infinite: true,\n                arrows: false,\n                initialSlide: position,\n                speed: self.speed\n            });\n        }\n    }(position, initialType), 0);\n\n\n    self.$measures.on('beforeChange', function (event, instance, from, to) {\n        self._set(to);\n    });\n\n    self.$measures.on('swipeStart', function () {\n        self.$element.trigger('measureSwapStarted');\n    });\n\n    self.$measures.on('swipeEnd', function () {\n        self.$element.trigger('measureSwapEnded');\n    });\n\n    self.$measures.on('afterChange', function () {\n        self.$element.trigger('measureSwapEnded');\n    });\n\n    self._set(position);\n\n};\n\n/**\n * define current position\n * @param p\n */\nField.prototype._set = function (p) {\n    this.current = this.positions[p];\n\n    // to avoid seeing a sudden change in timer\n    if (this.current.type === 'timer') {\n        this.current.instance.setValue(this.time);\n    }\n};\n\nField.prototype.getType = function() {\n    return this.current.type;\n};\n\n\nField.prototype.convertInValueToDisplay = function (type, value) {\n    var self = this;\n\n    if (self.convertToImperial) {\n        if (type === 'speed')\n            value = utils.kmToMiles(value);\n        if (type === 'distance')\n            value = utils.kmToMiles(value);\n        if (type === 'efficiency')\n            value = utils.meterToFeet(value);\n    }\n\n    if (self.context.round(type))\n        value = utils.round(value, self.context.getUnitDecimalPlaces(type));\n\n\n    return value;\n};\n\n\n/**\n *\n * Set value of field. If type is not being corrently rendered, it will just ignore\n *\n * @param type\n * @param value\n */\nField.prototype.setValue = function (type, value) {\n    if (type === 'timer') {\n        this.time = value;\n    }\n\n    if (type !== this.current.type) return;\n\n    this.current.instance.setValue(this.convertInValueToDisplay(type, value));\n};\n\nField.prototype.setValues = function (values) {\n    if (this.current.type in values) {\n        this.setValue(this.current.type, values[this.current.type]);\n    }\n\n    if ('timer' in values) {\n        this.time = values.timer;\n    }\n};\n\nexports.Field = Field;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./measures/field.js\n ** module id = 17\n ** module chunks = 0\n **/","function SmallMeasure($parent, label, unit, value) {\n    this.$parent = $parent;\n    this.label = label;\n    this.unit = unit;\n    this.defaultValue = value;\n\n};\n\nSmallMeasure.prototype.render = function () {\n    this.$parent.empty();\n\n    var $template = $('#template-small-measure').children().clone(true);\n    $template.appendTo(this.$parent);\n\n    this.$parent.find('.small-measure-label').html(this.label);\n    this.$parent.find('.small-measure-units').html(this.unit);\n\n    this.$value = this.$parent.find('.small-measure-value');\n    this.$value.html(this.defaultValue);\n};\n\nSmallMeasure.prototype.setValue = function (value) {\n    this.$value.html(value);\n};\n\n\nfunction LargeMeasure($parent, label, unit, value) {\n    this.$parent = $parent;\n    this.label = label;\n    this.unit = unit;\n    this.defaultValue = value;\n\n};\n\nLargeMeasure.prototype.render = function () {\n    this.$parent.empty();\n    var $template = $('#template-large-measure').children().clone(true);\n    $template.appendTo(this.$parent);\n\n    this.$parent.find('.big-measure-label').html(this.label);\n    this.$parent.find('.big-measure-units').html(this.unit);\n\n\n    this.$value = this.$parent.find('.session-big-measure');\n    this.$value.html(this.defaultValue);\n};\n\nLargeMeasure.prototype.setValue = function (value) {\n    if ((value + '').length > 4) {\n        this.$value.css({\"font-size\": \"19vw\"});\n        this.fontSizeChanged = true;\n    } else if ((value + '').length > 3) {\n        this.$value.css({\"font-size\": \"25vw\"});\n        this.fontSizeChanged = true;\n    } else if ((value + '').length > 2) {\n        this.$value.css({\"font-size\": \"30vw\"});\n        this.fontSizeChanged = true;\n    } else if (value < 100 && this.fontSizeChanged) {\n        this.$value.css({\"font-size\": null});\n        this.fontSizeChanged = false;\n    }\n\n    this.$value.html(value);\n};\n\nfunction Measure(){}\n\nMeasure.get = function (type, $parent, label, unit, defaultValue) {\n    if (type === 'small') {\n        return new SmallMeasure($parent, label, unit, defaultValue);\n    } else {\n        return new LargeMeasure($parent, label, unit, defaultValue);\n    }\n};\n\nexports.Measure = Measure;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./measures/measure.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\n\nvar utils = require('../utils/utils.js');\n\nfunction SessionSummaryView(page, context, sessionSummaryArguments) {\n    var self           = this,\n        session        = sessionSummaryArguments.session,\n        isPastSession  = sessionSummaryArguments.isPastSession,\n        $page          = $(page),\n        $duration      = $page.find('[data-selector=\"duration\"]'),\n        $distance      = $page.find('[data-selector=\"distance\"]'),\n        $avgSpeed      = $page.find('[data-selector=\"avg-speed\"]'),\n        $maxSpeed      = $page.find('[data-selector=\"max-speed\"]'),\n        $avgSPM        = $page.find('[data-selector=\"avg-spm\"]'),\n        $maxSPM        = $page.find('[data-selector=\"max-spm\"]'),\n        $avgEfficiency = $page.find('[data-selector=\"avg-efficiency\"]'),\n        $maxEfficiency = $page.find('[data-selector=\"max-efficiency\"]'),\n        $congrats      = $page.find('#summary-congrats'),\n        $details       = $page.find('#summary-details'),\n        $finish        = $page.find('#summary-finish'),\n        $back          = $page.find('#summary-back');\n\n    // if session summary is loading a past session, change Finish button to Back and change Congrats to Details\n    if (isPastSession === true) {\n        $finish.hide();\n        $congrats.hide();\n        $back.show();\n        $details.css('display', 'table-cell');\n    }\n\n    $page.find('#summary-congrats-session').html(moment(session.getSessionStart()).format('MMMM Do YYYY, HH:mm:ss'));\n    $page.find('#summary-details-session').html(moment(session.getSessionStart()).format('MMMM Do YYYY, HH:mm:ss'));\n\n    var duration = moment.duration(session.getSessionEnd() - session.getSessionStart());\n    var durationFormatted = utils.lpad(duration.hours(), 2)\n        + ':' + utils.lpad(duration.minutes(), 2) + \":\" + utils.lpad(duration.seconds(), 2);\n\n    var distance = context.displayMetric('distance', session.getDistance());\n    var avgSpeed = context.displayMetric('speed', session.getAvgSpeed());\n    var maxSpeed = context.displayMetric('speed', session.getTopSpeed());\n    var avgSPM = context.displayMetric('spm', session.getAvgSpm());\n    var maxSPM = context.displayMetric('spm', session.getTopSpm());\n    var avgEfficiency = context.displayMetric('efficiency', session.getAvgEfficiency());\n    var maxEfficiency = context.displayMetric('efficiency', session.getTopEfficiency());\n\n    $duration.html('<b>' + durationFormatted + '</b>' + ' H');\n    $distance.html('<b>' + distance + '</b> ' + context.getUnit('distance'));\n    $avgSpeed.html('<b>' + avgSpeed + '</b> ' + context.getUnit('speed'));\n    $maxSpeed.html('<b>' + maxSpeed + '</b> ' + context.getUnit('speed'));\n    $avgSPM.html('<b>' + avgSPM + '</b> ' + context.getUnit('spm'));\n    $maxSPM.html('<b>' + maxSPM + '</b> ' + context.getUnit('spm'));\n    $avgEfficiency.html('<b>' + avgEfficiency + '</b> ' + context.getUnit('efficiency'));\n    $maxEfficiency.html('<b>' + maxEfficiency + '</b> ' + context.getUnit('efficiency'));\n\n    $finish.on('tap', function () {\n\n        App.load('home', undefined, undefined, function () {\n            App.removeFromStack();\n        });\n    });\n}\n\n\nexports.SessionSummaryView = SessionSummaryView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/session-summary.js\n ** module id = 19\n ** module chunks = 0\n **/","'use strict';\n\nvar Settings = require('../model/settings');\nvar Api = require('../server/api');\n\nfunction SettingsView(page, settings) {\n    var $calibration = $('#calibration', page)\n        , $back = $('.back-button', page)\n        , $logout = $('#logout', page)\n        , $page = $(page)\n        , $units = $('#pick-units', page)\n        , $wifi = $('#wifi', page)\n        , $calibrationHelp = $('.settings-calibrate-help', page)\n        , $layout = $('#layout', page);\n\n    if (settings.getUnits() === Settings.CONSTANTS.MI) {\n        $units.prop('checked', true);\n    }\n\n    if (settings.isSyncOnlyOnWifi()) {\n        $wifi.prop('checked', true);\n    }\n\n    if (settings.isRestoreLayout()) {\n        $layout.prop('checked', true);\n    }\n\n    $calibration.on('tap', function () {\n        App.load('calibration');\n    });\n\n    $calibrationHelp.on('tap', function () {\n        App.load('calibration-help');\n    });\n\n    $logout.on('tap', function () {\n        Api.Auth.logout().done(function () {\n            App.load('login');\n        });\n    });\n\n    $back.on('tap', function () {\n        App.back('home', function () {\n        });\n    });\n\n    $(page).on('appDestroy', function () {\n        $calibration.off('touchstart');\n        $back.off('touchstart');\n    });\n\n    $logout.find('.settings-facebook').html(\"Logout (\" + Api.User.getProfile().name + \")\");\n\n    $('[data-selector=\"version\"]', page).html(\"v. 0.8.4 / u. \" + Api.User.getId());\n\n    $('.settings-website-text', page).on('click', function () {\n        window.open('https://app.gopaddler.com/', '_system');\n    });\n\n    $page.on('appBeforeBack', function (e) {\n        var units = $units.is(':checked') ? Settings.CONSTANTS.MI : Settings.CONSTANTS.KM;\n        var wifi = $wifi.is(':checked') ;\n        var layout = $layout.is(':checked');\n        Settings.saveSettings(units, wifi, layout);\n\n        // update referece that is being used globally\n        settings.setUnits(units);\n        settings.setSyncOnlyOnWifi(wifi);\n        settings.setRestoreLayout(layout);\n    });\n\n}\n\n\nexports.SettingsView = SettingsView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/settings-view.js\n ** module id = 20\n ** module chunks = 0\n **/","'use strict';\n\nvar db = require('../db.js');\n\nvar CONSTANTS  = {\n    KM: 'K',\n    MI: 'M'\n};\n\nfunction Settings(version, units, syncOnlyOnWifi, restoreLayout, showTouchGestures, showCalibrationTips) {\n    this._version = version;\n    this._units = units;\n    this._syncOnlyOnWifi = syncOnlyOnWifi;\n    this._restoreLayout = restoreLayout;\n    this._showTouchGestures = showTouchGestures === undefined ? true : showTouchGestures;\n    this._showCalibrationTips = showCalibrationTips === undefined ? true : showCalibrationTips;\n}\n\nSettings.prototype.getVersion = function() {\n    return this._version;\n};\n\nSettings.prototype.setVersion = function(version) {\n    this._version = version;\n};\n\nSettings.prototype.getUnits = function() {\n    return this._units;\n};\n\nSettings.prototype.setUnits = function(units) {\n    this._units = units;\n};\n\nSettings.prototype.isImperial = function(){\n    return this._units === CONSTANTS.MI;\n};\n\nSettings.prototype.isSyncOnlyOnWifi = function() {\n    return this._syncOnlyOnWifi;\n};\n\nSettings.prototype.setSyncOnlyOnWifi = function(syncOnlyOnWifi) {\n    this._syncOnlyOnWifi = syncOnlyOnWifi;\n};\n\nSettings.prototype.isRestoreLayout = function() {\n    return this._restoreLayout;\n};\n\nSettings.prototype.setRestoreLayout = function(restoreLayout) {\n    this._restoreLayout = restoreLayout;\n};\n\nSettings.prototype.isShowTouchGestures = function () {\n    return this._showTouchGestures;\n};\n\nSettings.prototype.setShowTouchGestures = function (showTouchGestures) {\n    this._showTouchGestures = showTouchGestures;\n};\n\nSettings.prototype.isShowCalibrationTips = function () {\n    return this._showCalibrationTips;\n};\n\nSettings.prototype.setShowCalibrationTips = function (showCalibrationTips) {\n    this._showCalibrationTips = showCalibrationTips;\n};\n\n\n\nSettings.prototype.touchGesturesShown = function () {\n    var connection = db.getConnection();\n    connection.executeSql(\"update settings set show_touch_events_tips = ?\", [0]);\n    this.setShowTouchGestures(false);\n}\n\nSettings.prototype.calibrationTipsShown = function () {\n    var connection = db.getConnection();\n    connection.executeSql(\"update settings set show_calibration_tips = ?\", [0]);\n    this.setShowCalibrationTips(false);\n}\n\n\nfunction loadSettings() {\n    var defer = $.Deferred();\n    var connection = db.getConnection();\n\n    connection.executeSql(\"SELECT * FROM settings\", [], function success(res) {\n        var row = res.rows.item(0);\n        defer.resolve(new Settings(row.version, row.units, row.sync_wifi, row.restore_layout, row.show_touch_events_tips === 1, row.show_calibration_tips === 1));\n    }, function error(e) {\n        console.log('error loding settings... defaulting');\n        defer.reject(err, new Settings(-1, CONSTANTS.KM, true, true));\n    });\n\n    return defer.promise();\n}\n\nfunction saveSettings(units, syncOnWikiOnly, restoreLayout) {\n    var connection = db.getConnection();\n    connection.executeSql(\"update settings set units = ?, sync_wifi = ?, restore_layout = ?\"\n        , [units, syncOnWikiOnly ? 1 : 0, restoreLayout ? 1 : 0]);\n}\n\nexports.loadSettings = loadSettings;\nexports.saveSettings = saveSettings;\nexports.Settings = Settings;\nexports.CONSTANTS  = CONSTANTS;\n\n\n\n\n\n\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./model/settings.js\n ** module id = 21\n ** module chunks = 0\n **/","'use strict';\n\nvar Calibration = require('../model/calibration.js').Calibration;\nvar Session = require('../model/session.js').Session;\nvar Api = require('../server/api');\nvar Dialog = require('../utils/dialog');\n\nfunction HomeView(page, context, request) {\n    request = request || {};\n\n    var $page = $(page)\n        , self = this\n        , $sessions = $page.find('#btn-sessions')\n        , $session = $page.find('#btn-session')\n        , $settings = $page.find('#btn-settings')\n        ;\n\n    self.$homeLastRecord = $page.find('.home-last-record');\n    self.$homeLastRecordDate = $page.find('.home-last-record-date');\n\n    $sessions.on('tap', function () {\n        App.load('sessions');\n    });\n\n    $session.on('tap', function () {\n        var calibration = Calibration.load();\n        if (calibration === undefined) {\n            showNoCalibrationModal($(page), context);\n            return false;\n        }\n        context.navigate('session', false, undefined);\n    });\n\n    $settings.on('tap', function () {\n        App.load('settings');\n    });\n\n    $page.find('.home-username-bold').html(Api.User.getProfile().name);\n\n    self.updateLastSessionDate();\n\n    $page.on('appShow', function () {\n        self.updateLastSessionDate();\n    });\n\n    // store device information\n    Api.User.saveDevice({\n        cordova: device.cordova,\n        model: device.model,\n        platform: device.platform,\n        uuid: device.uuid,\n        version: device.version,\n        manufacturer: device.manufacturer,\n        isVirtual: device.isVirtual,\n        serial: device.serial,\n        paddler: \"0.8.4\"\n    });\n\n\n    // check if we are comming from calibration and show dialog if that's the case\n   if (request.from === 'calibration') {\n       showFirstCalibrationCompletedModal($(page), context);\n   }\n}\n\nHomeView.prototype.updateLastSessionDate = function () {\n    var self = this;\n    Session.last().then(function (session) {\n        if (session === undefined) {\n            self.$homeLastRecord.html('No sessions yet');\n        } else {\n            self.$homeLastRecordDate.html(moment(session.getSessionStart()).format('MMM D'));\n        }\n    });\n};\n\n\n\nfunction showNoCalibrationModal($page, context) {\n    var html = [\n        '<div class=\"info-modal-body\">',\n            '<div class=\"info-modal-title vh_height10 vh_line-height10\">No calibration found</div>',\n            '<div class=\"info-modal-content vh_height26\"\">',\n                '<p style=\"text-align: center\">Before you start, we need to adjust to your mount system!</p>',\n                '<p class=\"vh_line-height11\" style=\"text-align: center\">Don\\'t worry - it will only take a few seconds...</p>',\n            '</div>',\n            '<div class=\"info-modal-controls vh_height15 vh_line-height15\">',\n                '<div class=\"info-modal-secondary-action\">Try it</div>',\n                '<div class=\"info-modal-primary-action\">Calibrate</div>',\n            '</div>',\n        '</div>'\n    ];\n\n    var $body = $(html.join(''))\n        , $skip = $body.find('.info-modal-secondary-action')\n        , $calibrate = $body.find('.info-modal-primary-action');\n\n    $skip.on('tap', function () {\n        Dialog.hideModal();\n        context.navigate('session', true);\n\n    });\n\n    $calibrate.on('tap', function () {\n        Dialog.hideModal();\n        context.navigate('calibration', true, {from: \"start-session\"});\n    });\n\n    Dialog.showModal($body, {center: true});\n}\n\nfunction showFirstCalibrationCompletedModal($page, context) {\n    var html = [\n        '<div class=\"info-modal-body\">',\n        '<div class=\"info-modal-title vh_height10 vh_line-height10\">Calibration completed</div>',\n        '<div class=\"info-modal-content vh_height26\"\">',\n        '<p style=\"text-align: center\">Thanks... now you can go ahead and start a new session</p>',\n        '</div>',\n        '<div class=\"info-modal-controls vh_height15 vh_line-height15\">',\n        '<div class=\"info-modal-primary-action\">OK</div>',\n        '</div>',\n        '</div>'\n    ];\n\n    var $body = $(html.join(''))\n        , $ok = $body.find('.info-modal-primary-action');\n\n    $ok.on('tap', function () {\n        Dialog.hideModal();\n    });\n\n    Dialog.showModal($body, {center: true});\n}\n\n\n\nexports.HomeView = HomeView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/home-view.js\n ** module id = 22\n ** module chunks = 0\n **/","'use strict';\n\nvar Api = require('../server/api');\n\nfunction LoginView(page) {\n\n    var $page = $(page), img;\n\n    if (window.devicePixelRatio == 0.75) {\n        img = 'login-ldpi.png';\n    }\n    else if (window.devicePixelRatio == 1) {\n        img = 'login-mdpi.png';\n    }\n    else if (window.devicePixelRatio == 1.5) {\n        img = 'login-hdpi.png';\n    }\n    else if (window.devicePixelRatio == 2) {\n        img = 'login-xdpi.png';\n    }\n\n    $page.find('.app-page').css({\"background-image\": \"images/\" + img});\n\n    var $login = $('#facebook', page);\n\n    $login.off('touchstart').on('touchstart', function () {\n\n        Api.Auth.login().done(function () {\n\n            App.load('home');\n\n        }).fail(function (err) {\n\n            alert(err);\n        });\n    });\n}\n\n\nexports.LoginView = LoginView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/login-view.js\n ** module id = 23\n ** module chunks = 0\n **/","'use strict';\n\nvar THIS_MONTH_PERIOD_FILTER = 'this-month',\n    LAST_MONTH_PERIOD_FILTER = 'last-month',\n\n    utils   = require('../utils/utils.js'),\n    Session = require('../model/session').Session,\n\n    appContext,\n    $page,\n    $sessionList;\n\n/**\n * Filter list of sessions by a given period\n *\n * @param {jQuery} $filter\n */\nfunction filterSessionsByPeriod($filter) {\n    var $sessionPeriodFilterButton = $page.find('#session-period-filter-button'),\n        period = $filter.data('period');\n\n    // adjust sessions according to chosen period\n    Session.all(function (sessions) {\n        var nbr = sessions.length;\n\n        if (nbr > 0) $sessionList.empty().css('height', 'auto');\n\n        for (var i = 0; i < nbr; i++) {\n            switch (period) {\n                case THIS_MONTH_PERIOD_FILTER:\n                    if (moment(sessions[i].sessionStart).month() === moment(new Date()).month()) {\n                        addSessionToSessionList(sessions[i]);\n                    }\n\n                    break;\n                case LAST_MONTH_PERIOD_FILTER:\n                    $sessionPeriodFilterButton.html('Last Month');\n                    if (moment(sessions[i].sessionStart).month() === moment(new Date()).subtract(1, 'months').month()) {\n                        addSessionToSessionList(sessions[i]);\n                    }\n\n                    break;\n                default:\n                    $sessionPeriodFilterButton.html('All Sessions');\n                    addSessionToSessionList(sessions[i]);\n            }\n        }\n    });\n\n    // change filter label\n    $page.find('.app-options-line.selected').removeClass('selected');\n    $filter.addClass('selected');\n\n    switch (period) {\n        case THIS_MONTH_PERIOD_FILTER:\n            $sessionPeriodFilterButton.html('Last 30 Days');\n            break;\n        case LAST_MONTH_PERIOD_FILTER:\n            $sessionPeriodFilterButton.html('Last Month');\n            break;\n        default:\n            $sessionPeriodFilterButton.html('All Sessions');\n    }\n\n    // update scroll to new height\n    new IScroll('#sessions-wrapper');\n}\n\n/**\n * Add given session to the list of sessions\n *\n * @param {object} session\n */\nfunction addSessionToSessionList(session) {\n    var $li       = $('<li class=\"session-row vh_height20\" data-id=\"' + session.id + '\"></li>'),\n        $main     = $('<div class=\"session-row-data-wrapper\"></div>'),\n        sessionAt = moment(new Date(session.getSessionStart())),\n        duration  = moment.duration(session.getSessionEnd() - session.getSessionStart()),\n        hours     = duration.hours(),\n        minutes   = duration.minutes(),\n        dDisplay  = utils.lpad(hours, 2) + ':' + utils.lpad(minutes, 2) + ' H',\n        distance  = session.getDistance();\n\n    $('<div class=\"session-row-wrapper\"></div>')\n        .append($main)\n        .append($('<div class=\"session-row-delete\"></div>')\n            .append($('<div style=\"display:table;width:100%;height:100%\"></div>')\n                .append($('<div class=\"session-row-delete-btn\"></div>').attr(\"session-id\", session.getId()).text(\"delete\"))))\n        .appendTo($li);\n\n    if (appContext.preferences().isImperial()) {\n        distance = utils.kmToMiles(distance);\n    }\n\n    $('<div class=\"session-row-data\"></div>')\n        .append($(\"<div style=\\\"display:table-cell\\\"/>\").html(sessionAt.format(\"MMM D\")))\n        .append($(\"<div style=\\\"display:table-cell\\\"/>\").html(sessionAt.format(\"HH:mm:ss\")))\n        .append($(\"<div style=\\\"display:table-cell;text-transform:none\\\"/>\").html(dDisplay))\n        .append($(\"<div style=\\\"display:table-cell\\\"/>\").html('<b>' + utils.round2(distance || 0) + ' ' + appContext.getUnit('distance') + '</b>'))\n        .appendTo($main);\n\n    // on a session tap, open session-summary with its details\n    $main.on('tap', function () {\n        App.load('session-summary', {\n            session: session,\n            isPastSession: true\n        });\n    });\n\n    $li.appendTo($sessionList);\n}\n\n/**\n * Initialize Sessions view\n *\n * @param page\n * @param context\n */\nfunction SessionsView(page, context) {\n    var self = this,\n        $back = $('.back-button', page),\n        $sessionPeriodFilter,\n        $sessionPeriodFilterOptions,\n        $sessionPeriodFilterButton,\n        nbr = 0;\n\n    appContext   = context;\n    $page        = $(page);\n    $sessionList = $page.find('#local-sessions');\n\n    $sessionPeriodFilter        = $page.find('#session-period-filter');\n    $sessionPeriodFilterOptions = $sessionPeriodFilter.find('.app-options-line');\n    $sessionPeriodFilterButton  = $page.find('#session-period-filter-button');\n\n    // toggle session period filter dropdown when button is tapped\n    $sessionPeriodFilterButton.on('tap', function () {\n        $sessionPeriodFilter.toggle();\n    });\n\n    // filter session when a filter is applied\n    $sessionPeriodFilterOptions.on('tap', function () {\n        filterSessionsByPeriod($(this));\n        $sessionPeriodFilter.toggle();\n    });\n\n    // bind event to back button\n    $back.on('touchstart', function () {\n        App.back('home', function () {\n        });\n    });\n\n    $page.on('appDestroy', function () {\n        $back.off('touchstart');\n    });\n\n    // handle delete\n    self.lock = {};\n    self.progress = {};\n    $sessionList.on('touchstart', '.session-row-delete-btn', function (e) {\n        var $el = $(event.target);\n        var sessionId = $el.attr('session-id');\n\n        if (self.lock[sessionId] === true) {\n            self.cancelDelete($el, sessionId);\n            return;\n        }\n\n        self.confirmDelete($el, sessionId);\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    });\n\n    // load sessions\n    Session.all(function (sessions) {\n        nbr = sessions.length;\n\n        if (nbr > 0) $sessionList.empty().css('height', 'auto');\n\n        for (var i = 0; i < nbr; i++) {\n            addSessionToSessionList(sessions[i]);\n        }\n    });\n\n    Session.sessionsSummary().then(function (data) {\n        var time = Math.floor(data.duration / 1000);\n        var hours = Math.floor(time / 3600);\n        time = time - hours * 3600;\n        var minutes = Math.floor(time / 60);\n        var seconds = time - minutes * 60;\n\n        $('#total-distance', page).text(utils.round2(data.distance));\n        $('#top-speed', page).text(utils.round2(data.speed));\n        $('#total-duration', page).text([utils.lpad(hours, 2), utils.lpad(minutes, 2), utils.lpad(seconds, 2)].join(':'));\n    });\n\n    $page.on('appShow', function () {\n\n        // initialize session period filter datepicker\n        $page.find('#session-period-datepicker').dateRangePicker({\n            inline:          true,\n            alwaysOpen:      true,\n            container:       '#session-period-datepicker',\n            singleMonth:     true,\n            showShortcuts:   false,\n            showTopbar:      false,\n            hoveringTooltip: false,\n            language:        'en'\n        });\n\n        if (nbr === 0) return;\n\n        var width = $('.session-row-delete', page).width();\n\n        Swiped.init({\n            query: 'li',\n            list: true,\n            left: 0,\n            right: width\n        });\n\n        new IScroll($('#sessions-wrapper', page)[0], {});\n    });\n}\n\n\nSessionsView.prototype.confirmDelete = function ($button, sessionId) {\n    var self = this;\n\n    self.lock[sessionId] = true;\n\n    // change button to cancel\n    $button.addClass('cancel');\n    $button.text('cancel');\n\n    // add progress in order to wait for delete\n    var $parent = $button.closest('li');\n    var $row = $('<li/>').insertAfter($parent);\n    $('<li/>').insertAfter($row);\n    var $progress = $('<div class=\"progress-waiting-cancel\"/>').appendTo($row);\n\n    self.progress[sessionId] = {$dom: $row, start: new Date().getTime()};\n\n    $({\n        property: 0\n    }).animate({\n            property: 100\n        }, {\n            duration: 5000,\n            step: function () {\n                var _percent = Math.round(this.property);\n                $progress.css(\"width\", _percent + \"%\");\n                if (_percent == 105) {\n                    $progress.addClass(\"done\");\n                }\n            },\n            complete: function () {\n                console.log(new Date().getTime() - self.progress[sessionId].start);\n                if (self.lock[sessionId] !== true || new Date().getTime() - self.progress[sessionId].start < 5000) {\n                    console.log('canceled');\n                    return;\n                }\n\n                Session.delete(parseInt(sessionId))\n                    .then(function () {\n                        $button.closest('li').remove();\n                        $row.next().remove();\n                        $row.remove();\n                        self.lock[sessionId] = false;\n                    });\n            }\n        });\n};\n\nSessionsView.prototype.cancelDelete = function ($button, sessionId) {\n    var self = this;\n    self.lock[sessionId] = false;\n    $button.removeClass('cancel');\n    $button.text('delete');\n    self.progress[sessionId].$dom.next().remove();\n    self.progress[sessionId].$dom.remove();\n};\n\nexports.SessionsView = SessionsView;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/sessions-view.js\n ** module id = 24\n ** module chunks = 0\n **/","'use strict';\n\nvar Calibrate = require('../core/calibrate.js').Calibrate;\n\nfunction CalibrationView(page, context, request) {\n    var $page = $(page)\n        , $content = $page.find('.app-content')\n        , $calibrate = $page.find('.calibrate')\n        , isStartSession = !!(request.from === 'start-session');\n\n    setTimeout(function () {\n        $content.css({\"line-height\": $page.height() + \"px\"});\n    }, 0);\n\n    setTimeout(function () {\n        var cal = new Calibrate(function () {\n            $calibrate.removeClass('listening');\n            $calibrate.addClass('finished');\n            $calibrate.html(\"Done!\");\n            setTimeout(function () {\n                if (isStartSession)\n                    context.navigate('home', true, {from: \"calibration\"});\n                else\n                    App.back();\n            }, 1500);\n        });\n        cal.start();\n\n    }, 1000);\n}\n\nexports.CalibrationView = CalibrationView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/calibration-view.js\n ** module id = 25\n ** module chunks = 0\n **/","'use strict';\n\nvar Calibration = require('../model/calibration.js').Calibration;\nvar utils = require('../utils/utils');\n\nfunction Calibrate (callback) {\n    this.callback = callback;\n    this.watchId = undefined;\n\n    this.GRAVITY_EARTH = 9.80665;\n    this.MEASURES = 300;\n}\n\nCalibrate.prototype.start = function() {\n    var self = this;\n\n    var i = 1, x = 0, y = 0, z = 0;\n\n    function onSuccess(acceleration) {\n        document.PREVENT_SYNC = true;\n\n        if (i === self.MEASURES) {\n            self.stop();\n            document.PREVENT_SYNC = false;\n            self.calculate(x, y, z);\n            self.callback.call();\n        }\n\n        var magnitude = Math.sqrt(Math.pow(acceleration.x, 2)\n            + Math.pow(acceleration.y, 2)\n            + Math.pow(acceleration.z, 2)) / self.GRAVITY_EARTH;\n\n        // TODO - check for to much noise\n\n        x += acceleration.x;\n        y += acceleration.y;\n        z += acceleration.z;\n        i++;\n\n    }\n\n    function onError() {\n        console.log('onError!');\n    }\n\n    setTimeout(function () {\n        var options = { frequency: 40 };\n        try {\n            self.watchId = navigator.accelerometer.watchAcceleration(onSuccess, onError, options);\n        } catch (e) {\n            console.log('hmmm... browser?');\n        }\n    }, 2500);\n};\n\nCalibrate.prototype.calculate = function (sumx, sumy, sumz) {\n    var self = this;\n    var avgX = sumx / self.MEASURES;\n    var avgY = sumy / self.MEASURES;\n    var avgZ = sumz / self.MEASURES;\n    var angleZ;\n    var predominantAxis;\n\n    if (avgZ < 9.81) {\n        angleZ = Math.asin(avgZ / 9.81);\n    } else {\n        angleZ = Math.asin(1);\n    }\n\n    if (angleZ < utils.toRadians(45)) {\n        predominantAxis = 2;\n    } else {\n        predominantAxis = 0;\n    }\n\n    var factorX = utils.toRadians(90) - angleZ;\n    factorX = factorX ? factorX : 1;\n\n    var factorZ = Math.cos(angleZ);\n    factorZ = factorZ ? factorZ : 1;\n\n    self.store(predominantAxis, angleZ, avgX, avgY, avgZ, factorX, factorZ);\n}\n\nCalibrate.prototype.stop = function () {\n    var self = this;\n    navigator.accelerometer.clearWatch(self.watchId);\n}\n\nCalibrate.prototype.store = function (predominant, angleZ, noiseX, noiseY, noiseZ, factorX, factorZ) {\n    var round = function(value) {\n        return Math.round(value * 10000000000000000) / 10000000000000000\n    };\n\n    new Calibration(predominant, round(angleZ), round(noiseX), round(noiseY), round(noiseZ), round(factorX), round(factorZ)).save();\n}\n\nCalibrate.load = function () {\n    var obj = JSON.parse(window.localStorage.getItem(\"calibration\"));\n    if (!obj) {\n        return undefined;\n    }\n    return new Calibration(obj.predominant, obj.angleZ, obj.noiseX, obj.noiseY, obj.noiseZ, obj.factorX, obj.factorZ);\n}\n\n\nexports.Calibrate = Calibrate;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./core/calibrate.js\n ** module id = 26\n ** module chunks = 0\n **/","'use strict';\n\n\nfunction CalibrationHelpView(page, context, request) {\n    request = request || {};\n\n    var $page = $(page)\n        , $content = $page.find('[data-selector=\"slick\"]')\n        , $gotIt\n        , isStartSession = !!(request.from === 'start-session');\n\n\n    // adjust slideshow for when the user reaches it from start session or from help\n    if (isStartSession) {\n        $page.find('[data-step=\"3\"]').find('.got-it').remove();\n    } else {\n        $page.find('[data-step=\"4\"]').remove();\n    }\n\n    $gotIt = $page.find('.got-it');\n\n    setTimeout(function () {\n        $content.slick({\n            dots: true,\n            speed: 300,\n            infinite: false,\n            arrows: false\n        });\n    }, 0);\n\n    $gotIt.on('tap', function () {\n        if (context.preferences().isShowCalibrationTips()) {\n            context.preferences().calibrationTipsShown();\n        }\n        if (isStartSession) context.navigate('calibration', true, {from: \"start-session\"});\n        else App.back();\n    });\n}\n\nexports.CalibrationHelpView = CalibrationHelpView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/calibration-help-view.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\n\n\nfunction SessionTipsView(page, context) {\n    var $page = $(page)\n        , $content = $page.find('[data-selector=\"slick\"]')\n        , $gotIt = $page.find('.got-it');\n\n    setTimeout(function () {\n        $content.slick({\n            dots: true,\n            speed: 300,\n            infinite: false,\n            arrows: false\n        });\n    }, 0);\n\n    $gotIt.on('tap', function () {\n        // store that we have shown the tutorial to the user\n        context.preferences().touchGesturesShown();\n\n        // navigate directly so it works in browser in dev mode\n        App.destroyStack();\n        App.load('session');\n    });\n}\n\nexports.SessionTipsView = SessionTipsView;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./views/session-tips-view.js\n ** module id = 28\n ** module chunks = 0\n **/","'use strict';\n\n// override functions when in testing (deviceready not triggered)\n// --------------------------------------------------------------\n\nif (!window.sqlitePlugin) {\n\n    var _open = window.openDatabase;\n    window.sqlitePlugin = window;\n\n    window.sqlitePlugin.openDatabase = function (args) {\n        return _open(args.name, \"1.0\", \"Static desc\", 200000);\n    }\n}\n\nfunction emulateCordova () {\n    var _open = window.openDatabase;\n    window.sqlitePlugin = window;\n\n    var executeSql = function (sql, args, success, error) {\n        success = success || function(){};\n        if (sql.toLowerCase().substr(0, 3) === 'ins') {\n            success({insertId: 1234});\n        } else if (sql === \"SELECT * FROM settings\") {\n            var data = [\n                {version: 1, units: 'K', sync_wifi: true, restore_layout: true}\n            ];\n            success({rows: {length: 14, item: function (index) {\n                return data[index];\n            }}})\n        } else {\n            var data = [\n                {id: 1, session_start: new Date(), distance: 1, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 2, session_start: new Date(new Date().getTime() - 86400000), distance: 2, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 3, session_start: new Date(new Date().getTime() - (2 * 86400000)), distance: 3, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 4, session_start: new Date(new Date().getTime() - (3 * 86400000)), distance: 4, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 5, session_start: new Date(new Date().getTime() - (4 * 86400000)), distance: 5, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 6, session_start: new Date(new Date().getTime() - (4 * 86400000)), distance: 6, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 7, session_start: new Date(new Date().getTime() - (4 * 86400000)), distance: 7, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 8, session_start: new Date(new Date().getTime() - (5 * 86400000)), distance: 8, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 9, session_start: new Date(new Date().getTime() - (6 * 86400000)), distance: 9, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 10, session_start: new Date(new Date().getTime() - (6 * 86400000)), distance: 10, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 11, session_start: new Date(new Date().getTime() - (7 * 86400000)), distance: 11, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 12, session_start: new Date(new Date().getTime() - (8 * 86400000)), distance: 12, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 13, session_start: new Date(new Date().getTime() - (8 * 86400000)), distance: 13, session_end: new Date(new Date().getTime() + 3600000)},\n                {id: 14, session_start: new Date(new Date().getTime() - (9 * 86400000)), distance: 14, session_end: new Date(new Date().getTime() + 3600000)}\n            ];\n            success({rows: {length: 14, item: function (index) {\n                return data[index];\n            }}})\n        }\n    };\n\n    window.sqlitePlugin.openDatabase = function (args) {\n        return {\n            executeSql: executeSql,\n            transaction: function (callback) {\n                setTimeout(function () {\n                    callback({executeSql: executeSql});\n                }, 0);\n            }\n        }\n    };\n\n    navigator.connection = navigator.connection || {};\n    window.Connection = {\"WIFI\": 1, \"ETHERNET\": 2};\n\n    window.analytics = {startTrackerWithId: function () {\n        }, trackView: function () {\n        }, setUserId: function () {\n    }};\n\n    window.screen.lockOrientation = function(){};\n    window.device = {};\n\n    navigator.geolocation.watchPosition = function (callback) {\n        var latitude, longitude;\n        return setInterval(function () {\n            if (latitude === undefined) {\n                latitude = Math.random() + 1;\n                longitude = Math.random() + 1;\n            }\n            latitude = latitude + Math.random() / 2 / 10000;\n            longitude = longitude + Math.random() / 2 / 10000;\n\n\n            callback({\n                timestamp: new Date().getTime(),\n                coords: {\n                    accuracy: 1,\n                    latitude: latitude,\n                    longitude: longitude,\n                    speed: Math.random() * 10 + 10\n                }\n            })\n        }, 1000);\n    };\n\n    navigator.geolocation.clearWatch = function (id) {\n        clearInterval(id);\n    };\n\n    navigator.accelerometer = navigator.accelerometer || {};\n    navigator.accelerometer.watchAcceleration = function (callback) {\n        return setInterval(function () {\n            callback({\n                timestamp: new Date().getTime(),\n                x: 1,\n                y: 1,\n                z: 1\n            });\n        }, 10);\n    };\n\n    navigator.accelerometer.clearWatch = function (id) {\n        clearInterval(id);\n    };\n}\n\njQuery.fn.center = function () {\n    this.css(\"position\",\"absolute\");\n    this.css(\"top\", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +\n        $(window).scrollTop()) + \"px\");\n    this.css(\"left\", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +\n        $(window).scrollLeft()) + \"px\");\n    return this;\n};\n\nexports.emulateCordova = emulateCordova;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./global.js\n ** module id = 29\n ** module chunks = 0\n **/","'use strict';\n\nvar IO = require('../utils/io.js').IO;\nvar Utils = require('../utils/utils.js');\nvar Session = require('../model/session').Session;\nvar Api = require('../server/api');\n\nvar processing = {};\n\nfunction sync() {\n    if (document.PREVENT_SYNC === true) return;\n\n    if (!Utils.onWifi()) {\n        return;\n    }\n\n    var isOffline = 'onLine' in navigator && !navigator.onLine;\n\n    if (isOffline)\n        return;\n\n    Session.findAllNotSynced(function (sessions) {\n        for (var i = 0; i < sessions.length; i++) {\n            if (processing[sessions[i].getId()] === true)\n                continue;\n\n            // set lock\n            processing[sessions[i].getId()] = true;\n\n            if (sessions[i].isSynced()) {\n                uploadDebugData(sessions[i]);\n            } else {\n                uploadSession(sessions[i]);\n            }\n        }\n    });\n}\n\n\nfunction uploadSession(localSession) {\n\n    var defer = $.Deferred();\n\n    localSession.createAPISession().then(function (trainingSession) {\n\n        Api.TrainingSessions.save(trainingSession).done(function (id) {\n\n            localSession.setRemoteId(id);\n\n            Session.synced(localSession.getRemoteId(), localSession.getId());\n\n            // upload debug data, if we have a file\n            if (trainingSession.data.length === 0) {\n                Session.debugSyncFinished(localSession.getId(), true);\n                delete processing[localSession.getId()];\n            } else {\n                uploadDebugData(localSession);\n            }\n\n        }).fail(function (err) {\n\n            console.log('save failed', err);\n            delete processing[localSession.getId()];\n        });\n    });\n\n    return defer.promise();\n}\n\n\nfunction loadFile(filename) {\n    var defer = $.Deferred();\n    IO.open(filename).then(IO.read).then(function (csv) {\n        defer.resolve(csv.split('\\n'));\n    });\n    return defer.promise();\n}\n\n\nfunction uploadDebugData(session) {\n\n    var self = this,\n        sensorData = [],\n        record,\n        defer = $.Deferred();\n\n    if (!session.getDebugFile()) {\n        delete processing[session.getId()];\n        defer.resolve();\n        return defer.promise();\n    }\n\n    loadFile(session.getDebugFile()).then(function (rows) {\n\n        var i = 0;\n\n        if (session.getDbgSyncedRows() > 0) {\n            i = session.getDbgSyncedRows() - 1;\n        } else {\n            // 1st time - register sync start\n            Session.startDebugSync(session.getId(), sensorData.length);\n        }\n\n        for (var l = rows.length; i < l; i++) {\n            if (!rows[0]) continue;\n\n            record = rows[i].split(';');\n            sensorData.push({\n                timestamp: record[0],\n                x: record[1],\n                y: record[2],\n                z: record[3],\n                value: record[4]\n            });\n        }\n\n        var SIZE = 1000;\n        (function loopAsync() {\n            var payload = sensorData.splice(0, SIZE);\n\n            if (payload.length === 0) {\n                Session.debugSyncFinished(session.getId(), true);\n                return;\n            }\n\n            Api.DebugSessions.save({trainingSession: session.getRemoteId(), data: payload}).done(function () {\n\n                    Session.debugSynced(session.getId(), SIZE);\n\n                    if (sensorData.length > 0) {\n                        loopAsync();\n                        return;\n                    }\n\n                    console.log('finish uploading session ' + session.getId());\n                    Session.debugSyncFinished(session.getId(), true);\n                    defer.resolve();\n                })\n                .fail(function (e) {\n\n                    console.log('error saving debug data: ', e);\n\n                    Session.get(session.getId()).then(function (s) {\n\n                        if (s.getDebugAttempt() < 3) {\n                            Session.incrementAttempt(session.getId()).then(function () {\n                                loopAsync();\n                            });\n                            return;\n                        }\n\n                        Session.debugSyncFinished(session.getId(), false);\n                        defer.reject(e);\n\n                    }).fail(function () {\n\n                        Session.debugSyncFinished(session.getId(), false);\n                        defer.reject(e);\n                    });\n                });\n        })();\n    });\n    return defer.promise();\n}\n\nexports.start = function () {\n    var self = this;\n    setTimeout(function () {\n        setInterval(sync.bind(self), 10000);\n    }, 10000);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./server/sync.js\n ** module id = 30\n ** module chunks = 0\n **/","var init = function () {\n    window.analytics.startTrackerWithId('UA-73212702-1');\n};\n\n\nvar view = function (name) {\n    window.analytics.trackView(name);\n};\n\nvar user = function (id) {\n    window.analytics.setUserId(id);\n};\n\n\nexports.init = init;\nexports.setView = view;\nexports.setUser = user;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./utils/analytics.js\n ** module id = 31\n ** module chunks = 0\n **/","'use strict';\n\nvar utils = require('./utils/utils');\n\n\nvar units = {\n\n    metric: {\n        timer: {\n            label: {regular: \"\", large: \"\"},\n            round: false\n        },\n        speed: {\n            label: {regular: \"Km/h\", large: \"Km/h\"},\n            decimalPlaces: 1\n        },\n        distance: {\n            label: {regular: \"Km\", large: \"Km\"},\n            decimalPlaces: 2\n        },\n        spm: {\n            label: {regular: \"SPM\", large: \"SPM\"},\n            decimalPlaces: 1\n        },\n        efficiency: {\n            label: {regular: \"m\", large: \"meters\"},\n            decimalPlaces: 1\n        },\n        pace: {\n            label: {regular: \"Min/Km\", large: \"Min/Km\"},\n            round: false\n        }\n    },\n    imperial: {\n        timer: {\n            label: {regular: \"\", large: \"\"},\n            round: false\n        },\n        speed: {\n            label: {regular: \"Mi/h\", large: \"Mi/h\"},\n            decimalPlaces: 1\n        },\n        distance: {\n            label: {regular: \"Mi\", large: \"Mi\"},\n            decimalPlaces: 2\n        },\n        spm: {\n            label: {regular: \"SPM\", large: \"SPM\"},\n            decimalPlaces: 1\n        },\n        efficiency: {\n            label: {regular: \"ft\", large: \"ft\"},\n            decimalPlaces: 1\n        },\n        pace: {\n            label: {regular: \"Min/Mi\", large: \"Min/Mi\"},\n            round: false\n        }\n    }\n};\n\n\nfunction Context(settings) {\n    this._settings = settings;\n    this._system = this._settings.isImperial() ? 'imperial' : 'metric';\n}\n\nContext.prototype.preferences = function () {\n    return this._settings;\n};\n\n/**\n *\n * @param type\n * @param large\n * @returns {*}\n */\nContext.prototype.getUnit = function (type, large) {\n    var size = large === true ? \"large\" : \"regular\";\n\n    return units[this._system][type].label[size];\n};\n\n/**\n * Should we round this type?\n * @param type\n * @returns {boolean}\n */\nContext.prototype.round = function (type) {\n    return units[this._system][type].round !== false && units[this._system][type].decimalPlaces > 0;\n};\n\n/**\n *\n * @param type\n * @returns {*}\n */\nContext.prototype.getUnitDecimalPlaces = function (type) {\n    return units[this._system][type].decimalPlaces;\n};\n\nContext.prototype.displayMetric = function (type, value) {\n    if (units[this._system][type] === undefined) {\n        throw 'unkown field type - ' + type;\n    }\n\n    if (isNaN(value)) return 0;\n\n    return utils.round(value, this.getUnitDecimalPlaces(type));\n};\n\n/**\n * navigate to target\n * @param target\n * @param clear\n * @param args\n */\nContext.prototype.navigate = function (target, clear, args) {\n    if (target === 'session' && this._settings.isShowTouchGestures()) {\n        target = 'session-basic-touch-tutorial';\n    }\n\n    if (target === 'calibration' && this._settings.isShowCalibrationTips()) {\n        target = 'calibration-help';\n    }\n\n    if (clear === true) App.destroyStack();\n\n    App.load(target, args, undefined, function () {\n        if (clear === true)\n            App.removeFromStack();\n    });\n};\n\nexports.Context = Context;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./context.js\n ** module id = 32\n ** module chunks = 0\n **/"],"sourceRoot":""}